(window.webpackJsonp=window.webpackJsonp||[]).push([[410],{322:function(e,t,o){"use strict";o.r(t);var n=o(14),a=Object(n.a)({},function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"titanium-ui-toolbar"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#titanium-ui-toolbar","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.UI.Toolbar")]),e._v(" "),o("ProxySummary"),e._v(" "),o("h2",{attrs:{id:"overview"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),o("p",[e._v("A "),o("code",[e._v("Toolbar")]),e._v(" is created by the "),o("type-link",{attrs:{type:"Titanium.UI.createToolbar"}},[e._v("Titanium.UI.createToolbar")]),e._v(" factory method or "),o("strong",[o("code",[e._v("<Toolbar>")])]),e._v(" Alloy element.")],1),e._v(" "),o("p",[e._v("A "),o("code",[e._v("Toolbar")]),e._v(" can contain buttons, as well as certain other widgets, including text fields and\nlabels.")]),e._v(" "),o("p",[e._v("To provide spacing between items in the toolbar, on iOS you can use the special system button types,\n"),o("type-link",{attrs:{type:"Titanium.UI.iOS.SystemButton.FIXED_SPACE"}},[e._v("FIXED_SPACE")]),e._v(" and\n"),o("type-link",{attrs:{type:"Titanium.UI.iOS.SystemButton.FLEXIBLE_SPACE"}},[e._v("FLEXIBLE_SPACE")]),e._v(".")],1),e._v(" "),o("p",[e._v("Note that toolbars are positioned like other views (using the "),o("code",[e._v("top")]),e._v(" and "),o("code",[e._v("bottom")]),e._v(" properties,\nfor example), but the "),o("a",{attrs:{href:"https://developer.apple.com/ios/human-interface-guidelines/overview/themes/#//apple_ref/doc/uid/TP40006556-CH12-SW4",target:"_blank",rel:"noopener noreferrer"}},[e._v("iOS Human Interface Guidelines"),o("OutboundLink")],1),e._v("\nhave specific requirements for placing toolbars, specifically:")]),e._v(" "),o("ul",[o("li",[e._v("On the iPhone and Android, a toolbar should be at the bottom of the window.")]),e._v(" "),o("li",[e._v("On the iPad, a toolbar should appear at the top or bottom of a window.")])]),e._v(" "),o("p",[e._v("Due to an iOS limitation, the buttons in the toolbar only support the "),o("code",[e._v("click")]),e._v(" event.\nThe native object underlying a toolbar button does not generate standard view events,\nsuch as "),o("code",[e._v("touchstart")]),e._v(" and "),o("code",[e._v("touchend")]),e._v(".")]),e._v(" "),o("p",[e._v("On Android a toolbar can also be used as an ActionBar for "),o("type-link",{attrs:{type:"Titanium.Android.Activity"}},[e._v("activities")]),e._v(". This allows a toolbar to\ninherit "),o("type-link",{attrs:{type:"Titanium.Android.ActionBar"}},[e._v("ActionBar's")]),e._v(" methods, properties and events and provide a better customization of this\ndesign element. For example you can provide your own images to be used as navigation button icon, overflow menu icon and logo.\nIn order to do that, an application must be using Theme.AppCompat.NoTitleBar.\nIt can be set in the tiapp.xml file of the application.")],1),e._v(" "),o("p",[e._v("See also:")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://developer.apple.com/ios/human-interface-guidelines/bars/toolbars/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Toolbar in the iOS Human Interface Guidelines."),o("OutboundLink")],1)])]),e._v(" "),o("h2",{attrs:{id:"examples"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),o("h3",{attrs:{id:"simple-toolbar"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#simple-toolbar","aria-hidden":"true"}},[e._v("#")]),e._v(" Simple Toolbar")]),e._v(" "),o("p",[e._v("The following code excerpt creates a simple toolbar, placed at the bottom of the window.")]),e._v(" "),o("pre",[o("code",[e._v("var win = Ti.UI.createWindow({\n    backgroundColor: 'white'\n});\n\nvar send = Ti.UI.createButton({\n    title: 'Send'\n});\n\nvar camera = Ti.UI.createButton({\n    title: 'Camera'\n});\n\nvar cancel = Ti.UI.createButton({\n    title: 'Cancel'\n});\n\nvar toolbar = Ti.UI.createToolbar({\n    items: [send, camera, cancel],\n    bottom: 0\n});\n\nwin.add(toolbar);\nwin.open();\n")])]),e._v(" "),o("h3",{attrs:{id:"toolbar-ios-with-extended-background"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#toolbar-ios-with-extended-background","aria-hidden":"true"}},[e._v("#")]),e._v(" Toolbar (iOS) with extended background")]),e._v(" "),o("p",[e._v("The following code excerpt creates a simple toolbar, placed at the top of the window which extends its background under the status bar.")]),e._v(" "),o("pre",[o("code",[e._v("var win = Ti.UI.createWindow({\n    backgroundColor: 'white'\n});\n\nvar send = Ti.UI.createButton({\n    title: 'Send',\n    style: Ti.UI.iOS.SystemButtonStyle.DONE,\n});\n\nvar camera = Ti.UI.createButton({\n    systemButton: Ti.UI.iOS.SystemButton.CAMERA,\n});\n\nvar cancel = Ti.UI.createButton({\n    systemButton: Ti.UI.iOS.SystemButton.CANCEL\n});\n\nflexSpace = Ti.UI.createButton({\n    systemButton: Ti.UI.iOS.SystemButton.FLEXIBLE_SPACE\n});\n\nvar toolbar = Ti.UI.createToolbar({\n    items: [send, flexSpace, camera, flexSpace, cancel],\n    top: 20,\n    extendBackground: true\n});\n\nwin.add(toolbar);\nwin.open();\n")])]),e._v(" "),o("p",[e._v("Note the use of the flexible space for positioning the toolbar buttons -- the\n"),o("code",[e._v("FLEXIBLE_SPACE")]),e._v(" button doesn't appear as a button, but a variable space between the\ncontrols on either side of it. Available space in the toolbar is divided between all of the\nflexible space buttons in the toolbar. Without the flexible spaces in this example,\nthe toolbar buttons would be grouped tightly together on the left side of the toolbar.")]),e._v(" "),o("h3",{attrs:{id:"alloy-example-simple-toolbar"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#alloy-example-simple-toolbar","aria-hidden":"true"}},[e._v("#")]),e._v(" Alloy Example (simple Toolbar)")]),e._v(" "),o("p",[e._v("Simple Toolbar example as an Alloy view.")]),e._v(" "),o("pre",[o("code",[e._v('<Alloy>\n    <Window>\n        <Toolbar bottom="0">\n\n            \x3c!-- The Items tag sets the Toolbar.items property. --\x3e\n            <Items>\n                <Button id="send" title="Send" />\n                <Button id="camera" title="Camera" />\n                <Button id="cancel" title="Cancel" />\n            </Items>\n\n        </Toolbar>\n    </Window>\n</Alloy>\n')])]),e._v(" "),o("h3",{attrs:{id:"alloy-example-toolbar-as-actionbar"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#alloy-example-toolbar-as-actionbar","aria-hidden":"true"}},[e._v("#")]),e._v(" Alloy Example (Toolbar as ActionBar)")]),e._v(" "),o("p",[e._v("Example how to set up Toolbar as an ActionBar")]),e._v(" "),o("pre",[o("code",[e._v('<Alloy>\n    <Window title="My Test App" backgroundColor="gray" customToolbar="toolbar">\n        <Toolbar\n            title="MyMenu"\n            subtitle="Subtitle"\n            width="Ti.UI.FILL"\n            top="0"\n            barColor="#639851"\n            displayHomeAsUp="true"\n            homeButtonEnabled="true"\n            overflowIcon="logo.png">\n\n            \x3c!-- The Items tag sets the Toolbar.items property. --\x3e\n            <Items>\n                <Button id="ok" title="OK"/>\n                <Button id="cancel" title="Cancel"/>\n            </Items>\n        </Toolbar>\n\n        \x3c!-- The MenuItem\'s to be mapped to the toolbar --\x3e\n        <Menu>\n            <MenuItem id="item1" title="Settings" showAsAction="Ti.Android.SHOW_AS_ACTION_NEVER"/>\n            <MenuItem id="item2" title="Search" showAsAction="Ti.Android.SHOW_AS_ACTION_NEVER"/>\n        </Menu>\n    </Window>\n</Alloy>\n')])]),e._v(" "),o("ApiDocs")],1)},[],!1,null,null,null);a.options.__file="toolbar.md";t.default=a.exports}}]);