(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{297:function(e,a,s){"use strict";s.r(a);var t=s(14),r=Object(t.a)({},function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"modules-cloud-chats"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modules-cloud-chats","aria-hidden":"true"}},[e._v("#")]),e._v(" Modules.Cloud.Chats")]),e._v(" "),s("ProxySummary"),e._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),s("h3",{attrs:{id:"create-chat-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-chat-message","aria-hidden":"true"}},[e._v("#")]),e._v(" Create Chat Message")]),e._v(" "),s("p",[e._v("This example sends a chat message to a list of users and checks the response.")]),e._v(" "),s("pre",[s("code",[e._v("Cloud.Chats.create({\n    to_ids: ids.join(','),\n    message: 'Good morning'\n}, function (e) {\n    if (e.success) {\n        for (var i = 0; i < e.chats.length; i++) {\n            var chat = e.chats[i];\n            alert('Success:\\n' +\n                'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\\n' +\n                'Updated: ' + chat.updated_at + '\\n' +\n                'Message: ' + chat.message);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error && e.message) || JSON.stringify(e)));\n    }\n});\n")])]),e._v(" "),s("h3",{attrs:{id:"query-for-chat-message"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query-for-chat-message","aria-hidden":"true"}},[e._v("#")]),e._v(" Query for Chat Message")]),e._v(" "),s("p",[e._v("This example requests a list of chat messages and checks the response.")]),e._v(" "),s("pre",[s("code",[e._v("Cloud.Chats.query({\n    participate_ids: ids.join(','),\n    where: {\n        updated_at: { '$gt': last_update_time }\n    }\n}, function (e) {\n    if (e.success) {\n        for (var i = 0; i < e.chats.length; i++) {\n            var chat = e.chats[i];\n            alert('Success:\\n' +\n                'From: ' + chat.from.first_name + ' ' + chat.from.last_name + '\\n' +\n                'Updated: ' + chat.updated_at + '\\n' +\n                'Message: ' + chat.message);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error && e.message) || JSON.stringify(e)));\n    }\n});\n")])]),e._v(" "),s("h3",{attrs:{id:"get-chat-groups"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-chat-groups","aria-hidden":"true"}},[e._v("#")]),e._v(" Get Chat Groups")]),e._v(" "),s("p",[e._v("This example requests a lists of chat groups that the current user belongs to and checks\nthe response.")]),e._v(" "),s("pre",[s("code",[e._v("Cloud.Chats.getChatGroups(function (e) {\n    if (e.success) {\n        for (var i = 0; i < e.chats.length; i++) {\n            var group = e.chat_groups[i];\n            alert('Success:\\n' +\n                'id: ' + group.id + '\\n' +\n                'created_at: ' + group.created_at + '\\n' +\n                'number of users: ' + group.participate_users.length);\n        }\n    } else {\n        alert('Error:\\n' +\n            ((e.error && e.message) || JSON.stringify(e)));\n    }\n});\n")])]),e._v(" "),s("ApiDocs")],1)},[],!1,null,null,null);r.options.__file="chats.md";a.default=r.exports}}]);