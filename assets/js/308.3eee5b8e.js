(window.webpackJsonp=window.webpackJsonp||[]).push([[308],{256:function(n,e,t){"use strict";t.r(e);var i=t(14),o=Object(i.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"titanium-network-cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#titanium-network-cookie","aria-hidden":"true"}},[n._v("#")]),n._v(" Titanium.Network.Cookie")]),n._v(" "),t("ProxySummary"),n._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[n._v("#")]),n._v(" Overview")]),n._v(" "),t("p",[n._v("Use "),t("type-link",{attrs:{type:"Titanium.Network.createCookie"}},[n._v("Titanium.Network.createCookie")]),n._v(" to create a new "),t("code",[n._v("Cookie")]),n._v(" object.\nThe following is an example of how to setup and read a cookie on a web view:")],1),n._v(" "),t("pre",[t("code",[n._v(" if (!Date.prototype.toISOString) {\n   (function() {\n     function pad(number) {\n       var r = String(number);\n       if (r.length === 1) {\n         r = '0' + r;\n       }\n       return r;\n     }\n\n     Date.prototype.toISOString = function() {\n       return this.getUTCFullYear() +\n         '-' + pad(this.getUTCMonth() + 1) +\n         '-' + pad(this.getUTCDate()) +\n         'T' + pad(this.getUTCHours()) +\n         ':' + pad(this.getUTCMinutes()) +\n         ':' + pad(this.getUTCSeconds()) +\n         '.' + String((this.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5) +\n         'Z';\n     };\n   }());\n }\n\n var cookieListTemplate = {\n   properties: {\n     accessoryType: Ti.UI.LIST_ACCESSORY_TYPE_DISCLOSURE,\n     canEdit: true\n   },\n   childTemplates: [{\n       type: 'Ti.UI.Label',\n       bindId: 'cookie domain',\n       properties: {\n         top: 5,\n         left: 10,\n         height: 15,\n         font: {\n           fontFamily: 'Courier New'\n         }\n       }\n     },\n     {\n       type: 'Ti.UI.Label',\n       bindId: 'cookie name',\n       properties: {\n         top: 25,\n         left: 10,\n         height: 15,\n         font: {\n           fontFamily: 'Courier New'\n         }\n       }\n     },\n     {\n       type: 'Ti.UI.Label',\n       bindId: 'cookie path',\n       properties: {\n         top: 45,\n         left: 10,\n         height: 15,\n         font: {\n           fontFamily: 'Courier New'\n         }\n       }\n     },\n     {\n       type: 'Ti.UI.Label',\n       bindId: 'cookie expiryDate',\n       properties: {\n         top: 65,\n         left: 10,\n         height: 15,\n         font: {\n           fontFamily: 'Courier New'\n         }\n       }\n     }\n   ]\n };\n var navigationController = Ti.UI.createNavigationWindow();\n\n function LoadCookiesWindow() {\n   var close = Ti.UI.createButton({\n     title: 'close',\n     bottom: 10\n   });\n   var win = Ti.UI.createWindow({\n     // rightNavButton: close\n     backgroundColor: '#ccc'\n   });\n   var nav = Ti.UI.createNavigationWindow({\n     window: win\n   });\n   var webview = Ti.UI.createWebView({\n     url: 'http://appcelerator.com',\n     bottom: 50\n   });\n   win.add(close);\n   win.add(webview);\n   close.addEventListener('click', function() {\n     nav.close();\n   });\n   return nav;\n }\n\n function MainWindow() {\n\n   var listViewData = [];\n   var loadCookies = Ti.UI.createButton({\n     title: \"cookies+\",\n     left: 0,\n     bottom: 5\n   });\n   var createCookies = Ti.UI.createButton({\n     title: \"+\",\n     right: 0,\n     bottom: 5\n   });\n\n   var win = Ti.UI.createWindow({\n     backgroundColor: '#ccc',\n     title: 'Cookies for iOS!',\n     // rightNavButton: loadCookies,\n     // leftNavButton: createCookies\n   });\n\n   var deleteCookies = Ti.UI.createButton({\n     title: 'delete all cookies',\n     bottom: 5\n   });\n   win.add(createCookies);\n   win.add(loadCookies);\n   win.add(deleteCookies);\n\n   deleteCookies.addEventListener('click', function() {\n     Ti.Network.removeAllHTTPCookies();\n     win.fireEvent('focus');\n   });\n\n   var listSection = Ti.UI.createListSection({\n     items: []\n   });\n\n   var listView = Ti.UI.createListView({\n     sections: [listSection],\n     rowHeight: 95,\n     bottom: 38,\n     templates: {\n       'cookieListTemplate': cookieListTemplate\n     }\n   });\n   win.add(listView);\n\n   win.addEventListener('focus', function() {\n     var cookies = Ti.Network.getAllHTTPCookies();\n     listViewData = [];\n     for (var i = 0; i < cookies.length; i++) {\n       var obj = {};\n       var date = new Date(cookies[i].expiryDate);\n       obj['cookie domain'] = {\n         text: 'Domain:\\t' + cookies[i].domain\n       };\n       obj['cookie name'] = {\n         text: 'Name:\\t\\t' + cookies[i].name\n       };\n       obj['cookie path'] = {\n         text: 'Path:\\t\\t' + cookies[i].path\n       };\n       obj['cookie expiryDate'] = {\n         text: 'Exp Date:\\t' + (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear().toString().substr(2, 2)\n       };\n       obj['template'] = 'cookieListTemplate'\n       obj.cookie = {\n         domain: cookies[i].domain,\n         name: cookies[i].name,\n         path: cookies[i].path\n       }\n       listViewData.push(obj);\n     }\n     listSection.setItems(listViewData);\n   });\n   listView.addEventListener('itemclick', function(e) {\n     var item = e.section.getItemAt(e.itemIndex);\n     var cookie = Ti.Network.getHTTPCookies(\n       item.cookie.domain,\n       item.cookie.path,\n       item.cookie.name\n     );\n     if (!cookie.length) {\n       cookie = Ti.Network.getHTTPCookiesForDomain(item.cookie.domain);\n     }\n     var detailWindow = DetailWindow(cookie[0]);\n     navigationController.openWindow(detailWindow);\n   });\n   listView.addEventListener('delete', function(e) {\n     var item = listViewData[e.itemIndex];\n     // check if cookie exist with domain, path, and name\n     var cookie = Ti.Network.getHTTPCookies(\n       item.cookie.domain,\n       item.cookie.path,\n       item.cookie.name\n     );\n     if (cookie.length) {\n       Ti.Network.removeHTTPCookie(\n         item.cookie.domain,\n         item.cookie.path,\n         item.cookie.name\n       );\n     } else {\n       Ti.Network.removeHTTPCookiesForDomain(item.cookie.domain);\n     }\n     win.fireEvent('focus');\n   });\n   loadCookies.addEventListener('click', function() {\n     LoadCookiesWindow().open({\n       modal: true\n     });\n   });\n   createCookies.addEventListener('click', function() {\n     var detailWindow = DetailWindow(null);\n     navigationController.openWindow(detailWindow);\n   });\n   return win;\n }\n\n function CustomField(_params) {\n   var label = Ti.UI.createLabel({\n     left: 10,\n     right: 10,\n     top: 0,\n     text: _params.title,\n     font: {\n       fontFamily: 'Courier New'\n     }\n   });\n   var field = Ti.UI.createTextArea({\n     left: 10,\n     right: 10,\n     top: 8,\n     height: Ti.UI.SIZE,\n     value: _params.value,\n     borderRadius: 5,\n     font: {\n       fontFamily: 'Courier New'\n     }\n   });\n   if (_params.edit != undefined) {\n     field.editable = _params.edit;\n   }\n   var container = Ti.UI.createView({\n     layout: 'vertical',\n     top: 8,\n     bottom: 8,\n     height: Ti.UI.SIZE\n   });\n   container.add(label);\n   container.add(field);\n   return {\n     view: container,\n     value: function() {\n       return field.value.length ? field.value : null;\n     },\n     blur: function() {\n       field.blur();\n     }\n   };\n }\n\n function DetailWindow(_params) {\n   var hasCookie = _params != null;\n   _params = _params || {};\n   var win = Ti.UI.createWindow({\n     title: hasCookie ? 'Edit Cookie' : 'Create New Cookie',\n     backgroundColor: '#CCC'\n   });\n\n   var scroll = Ti.UI.createScrollView({\n     layout: 'vertical',\n     contentWidth: Ti.UI.FILL,\n     contentHeight: Ti.UI.SIZE\n   });\n\n   var name = CustomField({\n     title: 'name',\n     value: _params.name || ''\n   });\n   scroll.add(name.view);\n   var comment = CustomField({\n     title: 'comment',\n     value: _params.comment || ''\n   });\n   scroll.add(comment.view);\n   var domain = CustomField({\n     title: 'domain',\n     value: _params.domain || ''\n   });\n   scroll.add(domain.view);\n   var expiryDate = CustomField({\n     title: 'expiryDate',\n     value: _params.expiryDate ? new Date(_params.expiryDate).toISOString().replace('Z', '+0000') : ''\n   });\n   scroll.add(expiryDate.view);\n   var path = CustomField({\n     title: 'path',\n     value: _params.path || ''\n   });\n   scroll.add(path.view);\n   var value = CustomField({\n     title: 'value',\n     value: _params.value || ''\n   });\n   scroll.add(value.view);\n   var httponly = CustomField({\n     title: 'httponly',\n     value: _params.httponly === undefined ? '' : _params.httponly,\n     edit: false\n   });\n   scroll.add(httponly.view);\n   var secure = CustomField({\n     title: 'secure',\n     value: _params.secure || ''\n   });\n   scroll.add(secure.view);\n   var version = CustomField({\n     title: 'version',\n     value: _params.version || ''\n   });\n   scroll.add(version.view);\n\n   win.add(scroll);\n\n   function blurAll() {\n     name.blur();\n     comment.blur();\n     domain.blur();\n     expiryDate.blur();\n     path.blur();\n     value.blur();\n     httponly.blur();\n     secure.blur();\n     version.blur();\n   }\n\n   scroll.addEventListener('touchstart', blurAll);\n   scroll.addEventListener('dragstart', blurAll);\n\n   var updateButton = Ti.UI.createButton({\n     title: hasCookie ? 'Update Cookie' : 'Create Cookie',\n     left: 10,\n     right: 10,\n     top: 20,\n     backgroundColor: 'white'\n   });\n   scroll.add(updateButton)\n\n   updateButton.addEventListener('click', function() {\n     deleteCookie();\n     var cookie = getCookie();\n     if (cookie.isValid()) {\n       Ti.Network.addHTTPCookie(cookie);\n       Ti.UI.createAlertDialog({\n         title: 'Success!',\n         message: 'Cookie updated in the cookie storage'\n       }).show();\n     } else {\n       Ti.UI.createAlertDialog({\n         title: 'Fail!',\n         message: 'Cookie was invalid'\n       }).show();\n     }\n   });\n   if (hasCookie) {\n     var deleteButton = Ti.UI.createButton({\n       title: 'Delete Cookie',\n       left: 10,\n       right: 10,\n       top: 20,\n       backgroundColor: 'white'\n     });\n     scroll.add(deleteButton)\n\n     deleteButton.addEventListener('click', function() {\n       deleteCookie();\n       var cookie = getCookie();\n       if (cookie.isValid()) {\n         navigationController.closeWindow(win);\n       } else {\n         Ti.UI.createAlertDialog({\n           title: 'Fail!',\n           message: 'Cookie was invalid'\n         }).show();\n       }\n     });\n   }\n\n   function deleteCookie() {\n     Ti.Network.removeHTTPCookie(\n       _params.domain || domain.value(),\n       _params.path || path.value(),\n       _params.name || name.value()\n     );\n   }\n\n   function getCookie() {\n\n     var date = expiryDate.value();\n     var newDate = null;\n     if (date != null && date.length > 0) {\n       newDate = new Date(date);\n     }\n     var newCookie = Ti.Network.createCookie({\n       name: name.value(),\n       comment: comment.value(),\n       domain: domain.value(),\n       expiryDate: expiryDate.value(), // must be a JS Date object!\n       // expiryDate : newDate, // must be a JS Date object!\n       path: path.value() || '/',\n       value: value.value(),\n       httponly: httponly.value(), // Cannot set this one! ignored\n       secure: secure.value(),\n       version: version.value()\n     });\n\n     return newCookie;\n   }\n   return win;\n }\n\n navigationController.window = MainWindow();\n navigationController.open();\n")])]),n._v(" "),t("ApiDocs")],1)},[],!1,null,null,null);o.options.__file="cookie.md";e.default=o.exports}}]);