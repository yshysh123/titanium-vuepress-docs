(window.webpackJsonp=window.webpackJsonp||[]).push([[397],{358:function(e,t,i){"use strict";i.r(t);var r=i(14),o=Object(r.a)({},function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"titanium-ui-scrollview"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#titanium-ui-scrollview","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.UI.ScrollView")]),e._v(" "),i("ProxySummary"),e._v(" "),i("h2",{attrs:{id:"overview"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),i("p",[e._v("Use the "),i("type-link",{attrs:{type:"Titanium.UI.createScrollView"}},[e._v("Titanium.UI.createScrollView")]),e._v(" method or "),i("strong",[i("code",[e._v("<ScrollView>")])]),e._v(" Alloy element to create a scroll view.")],1),e._v(" "),i("p",[e._v("Views added to the scroll view will be scrolled based on the size of the scrollable region of\ncontent. If a scrollable region fits within the size of its scroll view, the view will not\nscroll.")]),e._v(" "),i("h3",{attrs:{id:"android-platform-notes"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#android-platform-notes","aria-hidden":"true"}},[e._v("#")]),e._v(" Android Platform Notes")]),e._v(" "),i("p",[e._v("On Android, a scroll view can only scroll in one direction, either vertically or horizontally,\nand not both at the same time. The "),i("type-link",{attrs:{type:"Titanium.UI.ScrollView.scrollType"}},[e._v("Titanium.UI.ScrollView.scrollType")]),e._v(" property sets the scroll\ndirection explicitly. If the "),i("code",[e._v("scrollType")]),e._v(" property is not assigned a value, the scroll view\nattempts to determine the scroll direction based on some the following rules:")],1),e._v(" "),i("ul",[i("li",[i("p",[e._v("If "),i("type-link",{attrs:{type:"Titanium.UI.ScrollView.contentWidth"}},[e._v("Titanium.UI.ScrollView.contentWidth")]),e._v(" and "),i("type-link",{attrs:{type:"Titanium.UI.ScrollView.width"}},[e._v("Titanium.UI.ScrollView.width")]),e._v(" are both\nset and are equal to each other, or if they are both set\n"),i("em",[e._v("and")]),e._v(" "),i("code",[e._v("showVerticalScrollIndicator")]),e._v(" is set to "),i("code",[e._v("true")]),e._v(', then the scroll direction is set to\n"vertical".')],1)]),e._v(" "),i("li",[i("p",[e._v("If "),i("type-link",{attrs:{type:"Titanium.UI.ScrollView.contentHeight"}},[e._v("Titanium.UI.ScrollView.contentHeight")]),e._v(" and "),i("type-link",{attrs:{type:"Titanium.UI.ScrollView.height"}},[e._v("Titanium.UI.ScrollView.height")]),e._v(" are\nboth set and are equal, or if they are both set and "),i("type-link",{attrs:{type:"Titanium.UI.ScrollView.showHorizontalScrollIndicator"}},[e._v("Titanium.UI.ScrollView.showHorizontalScrollIndicator")]),e._v(" is set to\n"),i("code",[e._v("true")]),e._v(', then the scroll direction is set to "horizontal".')],1)])]),e._v(" "),i("p",[e._v("Pinching a "),i("code",[e._v("ScrollableView")]),e._v(" to zoom in and out of content is not supported on Android. On iOS, this action\nis natively supported by the UIScrollView class, but on Android, the native ScrollView class does\nnot support this action.")]),e._v(" "),i("h2",{attrs:{id:"examples"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),i("h3",{attrs:{id:"simple-scroll-view"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#simple-scroll-view","aria-hidden":"true"}},[e._v("#")]),e._v(" Simple Scroll View")]),e._v(" "),i("p",[e._v("Create a scroll view with content.")]),e._v(" "),i("pre",[i("code",[e._v("var win = Ti.UI.createWindow({\n  backgroundColor: 'white',\n  exitOnClose: true,\n  fullscreen: false,\n  title: 'ScrollView Demo'\n});\n\nvar scrollView = Ti.UI.createScrollView({\n  showVerticalScrollIndicator: true,\n  showHorizontalScrollIndicator: true,\n  height: '80%',\n  width: '80%'\n});\nvar view = Ti.UI.createView({\n  backgroundColor:'#336699',\n  borderRadius: 10,\n  top: 10,\n  height: 2000,\n  width: 1000\n});\nscrollView.add(view);\nwin.add(scrollView);\nwin.open();\n")])]),e._v(" "),i("h3",{attrs:{id:"scroll-view-as-a-table-view"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#scroll-view-as-a-table-view","aria-hidden":"true"}},[e._v("#")]),e._v(" Scroll View as a Table View")]),e._v(" "),i("p",[e._v('Create a scroll view that contains a set of views in a layout to resemble a table view with\nrows. This approach can mitigate the native Android issue described in the "TextFields in\nTables with SOFT_INPUT_ADJUST_PAN" section of '),i("type-link",{attrs:{type:"Titanium.UI.TableView"}},[e._v("Titanium.UI.TableView")]),e._v(".")],1),e._v(" "),i("pre",[i("code",[e._v("var win = Ti.UI.createWindow({\n  backgroundColor:'white'\n});\n\nif (Ti.UI.Android){\n  win.windowSoftInputMode = Ti.UI.Android.SOFT_INPUT_ADJUST_PAN;\n}\n\nfunction createRow(i) {\n  var row = Ti.UI.createView({\n    backgroundColor: 'white',\n    borderColor: '#bbb',\n    borderWidth: 1,\n    width:'100%', height: 70,\n    top: 0, left: 0\n  });\n  var inputTextField = Ti.UI.createTextField({\n    hintText: 'Enter value ' + i,\n    keyboardType: Ti.UI.KEYBOARD_NUMBERS_PUNCTUATION,\n    top: 10, left: '10%',\n    width: '80%', height: 60\n  });\n  row.add(inputTextField);\n  return row;\n}\n\nvar scrollView = Ti.UI.createScrollView({\n  bottom:120,\n  layout: 'vertical'\n});\n\nfor(var i = 0; i <= 20; i++){\nvar row = createRow(i);\n  scrollView.add(row);\n}\nwin.add(scrollView);\n\nvar label = Ti.UI.createLabel({\n  backgroundColor:'darkgray',\n  text: 'Your advert here',\n  textAlign: 'center',\n  bottom:0,\n  width: Titanium.UI.FILL,\n  height:100\n});\nwin.add(label);\nwin.open();\n")])]),e._v(" "),i("h3",{attrs:{id:"alloy-xml-markup"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#alloy-xml-markup","aria-hidden":"true"}},[e._v("#")]),e._v(" Alloy XML Markup")]),e._v(" "),i("p",[e._v("Previous simple scroll view example as an Alloy view.")]),e._v(" "),i("pre",[i("code",[e._v('<Alloy>\n    <Window id="win" backgroundColor="white" exitOnClose="true" fullscreen="false" title="ScrollView Demo">\n        <ScrollView id="scrollView" showVerticalScrollIndicator="true" showHorizontalScrollIndicator="true" height="80%" width="80%">\n            <View id="view" backgroundColor="#336699" borderRadius="10" top="10" height="2000" width="1000" />\n        </ScrollView>\n    </Window>\n</Alloy>\n')])]),e._v(" "),i("ApiDocs")],1)},[],!1,null,null,null);o.options.__file="scrollview.md";t.default=o.exports}}]);