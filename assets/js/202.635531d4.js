(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{551:function(e,t,s){"use strict";s.r(t);var a=s(14),i=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"tableviewedgeinsets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tableviewedgeinsets","aria-hidden":"true"}},[e._v("#")]),e._v(" TableViewEdgeInsets")]),e._v(" "),s("ProxySummary"),e._v(" "),s("h2",{attrs:{id:"overview"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),s("p",[e._v("On iOS, the parameter "),s("code",[e._v("edgeInsets")]),e._v(" can be specified to set the distance("),s("code",[e._v("top")]),e._v(", "),s("code",[e._v("bottom")]),e._v(",\n"),s("code",[e._v("right")]),e._v(", "),s("code",[e._v("left")]),e._v(") that the content view is inset from the enclosing scroll view of the table.\nFor example")]),e._v(" "),s("pre",[s("code",[e._v("setContentInset({top:50,bottom:10,right:10,left:10}, {animated:true})\n")])]),e._v(" "),s("ApiDocs")],1)},[],!1,null,null,null);i.options.__file="tableviewedgeinsets.md";t.default=i.exports}}]);