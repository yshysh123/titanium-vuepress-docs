(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{571:function(n,t,i){"use strict";i.r(t);var a=i(14),e=Object(a.a)({},function(){var n=this,t=n.$createElement,i=n._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[i("h1",{attrs:{id:"transitionanimationparam"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#transitionanimationparam","aria-hidden":"true"}},[n._v("#")]),n._v(" transitionAnimationParam")]),n._v(" "),i("ProxySummary"),n._v(" "),i("h2",{attrs:{id:"examples"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[n._v("#")]),n._v(" Examples")]),n._v(" "),i("h3",{attrs:{id:"simple-example"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#simple-example","aria-hidden":"true"}},[n._v("#")]),n._v(" Simple Example")]),n._v(" "),i("p",[n._v("In this example, the red window opens with a transition animation, while closing it uses the\ndefault behavior where it slides off screen.  To add a transition animation when the red\nwindow closes, define a transition animation for the blue window.")]),n._v(" "),i("pre",[i("code",[n._v("var transition = Ti.UI.iOS.createTransitionAnimation({\n    duration: 300,\n    // The show transition makes the window opaque and rotates it correctly\n    transitionTo: {\n        opacity: 1,\n        duration: 300,\n        transform: Ti.UI.create2DMatrix()\n    },\n    // The hide transition makes the window transparent and rotates it upside down\n    transitionFrom: {\n        opacity: 0,\n        duration: 300 / 2,\n        transform: Ti.UI.create2DMatrix().rotate(180),\n    }\n});\n\nvar win2 = Ti.UI.createWindow({\n    backgroundColor: 'red',\n    title: 'Red Window',\n    transitionAnimation: transition,\n    opacity: 0,\n    transform: Ti.UI.create2DMatrix().rotate(180)\n});\nvar button2 = Ti.UI.createButton({\n    title: 'Close Red Window'\n});\nbutton2.addEventListener('click', function(){\n    nav.closeWindow(win2);\n    // In order to see the blue window again,\n    // need to reverse the transition animation\n    win1.opacity = 1;\n    win1.transform = Ti.UI.create2DMatrix().rotate(0);\n});\nwin2.add(button2);\n\nvar win1 = Ti.UI.createWindow({\n    backgroundColor: 'blue',\n    title: 'Blue Window',\n    // Uncomment to use a transition animation when the blue window is closed\n    // transitionAnimation: transition\n});\nvar button1 = Ti.UI.createButton({title: 'Open Red Window'});\nbutton1.addEventListener('click', function(){\n    nav.openWindow(win2);\n});\nwin1.add(button1);\n\nvar nav = Ti.UI.createNavigationWindow({\n    window: win1\n});\nnav.open();\n")])]),n._v(" "),i("ApiDocs")],1)},[],!1,null,null,null);e.options.__file="transitionanimationparam.md";t.default=e.exports}}]);