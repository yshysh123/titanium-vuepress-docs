(window.webpackJsonp=window.webpackJsonp||[]).push([[279],{662:function(e,t,n){"use strict";n.r(t);var a=n(14),o=Object(a.a)({},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"titanium-contacts"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#titanium-contacts","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.Contacts")]),e._v(" "),n("ProxySummary"),e._v(" "),n("h2",{attrs:{id:"overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),n("p",[e._v("See examples for more information.")]),e._v(" "),n("h3",{attrs:{id:"ios-platform-notes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ios-platform-notes","aria-hidden":"true"}},[e._v("#")]),e._v(" iOS Platform Notes")]),e._v(" "),n("p",[e._v("On iOS, the contacts database may be modified by an external application, causing any "),n("code",[e._v("Person")]),e._v(" or\n"),n("code",[e._v("Group")]),e._v(" objects you've retrieved to be out of sync with the database. The IDs of these objects are\nnot guaranteed to remain the same, so updating an object when it is out of sync may have\nunpredictable results.")]),e._v(" "),n("p",[e._v("To avoid this, listen for the "),n("type-link",{attrs:{type:"Titanium.Contacts.reload"}},[e._v("reload")]),e._v(" event. When you receive a\n"),n("code",[e._v("reload")]),e._v(" event, you should assume that any existing "),n("code",[e._v("Person")]),e._v(" or "),n("code",[e._v("Group")]),e._v(" objects are invalid and\nreload them from the "),n("code",[e._v("Contacts")]),e._v(" module before modifying them.")],1),e._v(" "),n("p",[e._v("See the examples for a sample use of the "),n("code",[e._v("reload")]),e._v(" event.")]),e._v(" "),n("p",[e._v("If 'ABAddressBookErrorDomain error 0' occurs, it implies that you are not allowed to add or edit\ncertain fields. Check your default account in the iOS settings under contacts. If it's not 'iCloud',\nmost likely it will not support fields such as alternateBirthday or socialProfile.")]),e._v(" "),n("h2",{attrs:{id:"examples"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),n("h3",{attrs:{id:"request-access-to-the-address-book"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#request-access-to-the-address-book","aria-hidden":"true"}},[e._v("#")]),e._v(" Request access to the address book")]),e._v(" "),n("p",[e._v("var performAddressBookFunction = function(){...};\nvar addressBookDisallowed = function(){...};\nif (Ti.Contacts.hasContactsPermissions()) {\nperformAddressBookFunction();\n} else {\nTi.Contacts.requestContactsPermissions(function(e) {\nif (e.success) {\nperformAddressBookFunction();\n} else {\naddressBookDisallowed();\n}\n});\n}")]),e._v(" "),n("h3",{attrs:{id:"query-existing-system-address-book-records"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#query-existing-system-address-book-records","aria-hidden":"true"}},[e._v("#")]),e._v(" Query Existing System Address Book Records")]),e._v(" "),n("p",[e._v("Output to the console all properties of all people.")]),e._v(" "),n("pre",[n("code",[e._v("var singleValue = [\n  'recordId', 'firstName', 'middleName', 'lastName', 'fullName', 'prefix', 'suffix', \n  'nickname', 'firstPhonetic', 'middlePhonetic', 'lastPhonetic', 'organization', \n  'jobTitle', 'department', 'note', 'birthday', 'created', 'modified', 'kind'\n];\nvar multiValue = [\n  'email', 'address', 'phone', 'instantMessage', 'relatedNames', 'date', 'url'\n];\nvar people = Ti.Contacts.getAllPeople();\nTi.API.info('Total contacts: ' + people.length);\nfor (var i=0, ilen=people.length; i<ilen; i++){\n  Ti.API.info('---------------------');\n  var person = people[i];\n  for (var j=0, jlen=singleValue.length; j<jlen; j++){\n    Ti.API.info(singleValue[j] + ': ' + person[singleValue[j]]);\n  }\n  for (var j=0, jlen=multiValue.length; j<jlen; j++){\n    Ti.API.info(multiValue[j] + ': ' + JSON.stringify(person[multiValue[j]]));\n  }\n}\n")])]),e._v(" "),n("h3",{attrs:{id:"add-new-system-address-book-records"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add-new-system-address-book-records","aria-hidden":"true"}},[e._v("#")]),e._v(" Add New System Address Book Records")]),e._v(" "),n("p",[e._v("Create two new records in the system address book. Note that the "),n("type-link",{attrs:{type:"Titanium.Contacts.Person"}},[e._v("Titanium.Contacts.Person")]),e._v("\nobject is queried in the same way that it is created (as shown in the previous example.)")],1),e._v(" "),n("pre",[n("code",[e._v("Ti.API.info('Saving contact...');\nTi.Contacts.createPerson({\n  firstName: 'Paul',\n  lastName: 'Dowsett',\n  address:{\n    work:[\n      {\n        CountryCode: 'gb', // determines how the address is displayed\n        Street: '200 Brook Drive\\nGreen Park',\n        City: 'Reading',\n        County: 'Berkshire',\n        Country: 'England',\n        ZIP: 'RG2 6UB'\n      },\n      {\n        CountryCode: 'gb', // determines how the address is displayed\n        Street: '1 St Pauls Road\\nClerkenwell',\n        City: 'City of London',\n        State: 'London',\n        Country: 'England',\n        ZIP: 'EC1 1AA'\n      }\n    ],\n    home:[\n      {\n        CountryCode: 'gb', // determines how the address is displayed\n        Street: '2 Boleyn Court',\n        City: 'London',\n        State: 'Greenwich',\n        Country: 'England',\n        ZIP: 'SE10'\n      }\n    ]\n  },\n  birthday: '2012-01-01T12:00:00.000+0000',\n  instantMessage:{\n    home:[\n      {\n        service: 'AIM',\n        username: 'leisureAIM'\n      },\n      {\n        service: 'MSN',\n        username: 'no_paul_here@msn.com'\n      }\n    ],\n    work:[\n      {\n        service: 'AIM',\n        username: 'seriousAIM'\n      }\n    ]\n  },\n  organization: 'Appcelerator',\n  phone:{\n    mobile: ['07900 000001', '07900 000002'],\n    work: ['+44 (0)118 925 6128', '+44 (0)118 000 0000']\n  },\n  url:{\n    homepage: ['www.google.com'],\n    work: ['www.appcelerator.com', 'www.example.com']\n  }\n});\nTi.API.info('Contact saved');\n\nTi.API.info('Saving contact...');\nvar workAddress1 = {\n  'CountryCode': 'us',\n  'Street':  '440 N. Bernardo Avenue',\n  'City': 'Mountain View',\n  'State': 'California',\n  'Country': 'United States',\n  'ZIP': '94043'\n};\n\nTi.Contacts.createPerson({\n  firstName:'Arthur',\n  lastName:'Evans',\n  address:{\n    'work':[workAddress1]\n  }\n});\nTi.API.info('Contact saved');\n")])]),e._v(" "),n("h3",{attrs:{id:"repopulate-contact-data-if-it-was-modified-externally"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#repopulate-contact-data-if-it-was-modified-externally","aria-hidden":"true"}},[e._v("#")]),e._v(" Repopulate contact data if it was modified externally")]),e._v(" "),n("p",[e._v("Listen for the "),n("code",[e._v("reload")]),e._v(" event to repopulate the contact data\nif it was modified externally, for example, in the iOS Contacts app.")]),e._v(" "),n("pre",[n("code",[e._v("var win = Ti.UI.createWindow();\nvar table = Ti.UI.createTableView();\n\n// Repopulate contact data\nfunction reloadContacts() {\n    var contacts = Ti.Contacts.getAllPeople();\n    var data = [];\n    for (var i = 0; i < contacts.length; i++) {\n        var title = contacts[i].fullName;\n        if (!title || title.length === 0) {\n            title = \"(no name)\";\n        }\n        var row = Ti.UI.createTableViewRow({\n            title: title\n        });\n        data.push(row);\n    }\n    table.data = data;\n}\n\nTi.Contacts.addEventListener('reload', function(e){\n    alert('Reloading contacts. Your contacts were changed externally!');\n    reloadContacts();\n});\n\n// initial call to populate contact data\nreloadContacts();\n\nwin.add(table);\nwin.open();\n")])]),e._v(" "),n("ApiDocs")],1)},[],!1,null,null,null);o.options.__file="contacts.md";t.default=o.exports}}]);