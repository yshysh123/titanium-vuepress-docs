(window.webpackJsonp=window.webpackJsonp||[]).push([[337],{531:function(e,a,t){"use strict";t.r(a);var n=t(14),i=Object(n.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"titanium-ui-dashboardview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#titanium-ui-dashboardview","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.UI.DashboardView")]),e._v(" "),t("ProxySummary"),e._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),t("p",[e._v("The DashboardView is created using the "),t("type-link",{attrs:{type:"Titanium.UI.createDashboardView"}},[e._v("Titanium.UI.createDashboardView")]),e._v(" method or "),t("strong",[t("code",[e._v("<DashboardView>")])]),e._v("\nAlloy element.")],1),e._v(" "),t("p",[e._v("Dashboard view's edit mode may be activated by a longpress of a "),t("type-link",{attrs:{type:"Titanium.UI.DashboardItem"}},[e._v("Titanium.UI.DashboardItem")]),e._v(" item,\nunless this behavior has been disabled by the "),t("type-link",{attrs:{type:"Titanium.UI.DashboardView.editable"}},[e._v("editable")]),e._v("\nproperty. As a dashboard view does not inherently provide a way to exit edit mode, this must be\nexplicitly defined.")],1),e._v(" "),t("p",[e._v("When edit mode has been activated, the item icons wobble by default to act as a visual cue.\nThis behavior may be disabled using the "),t("type-link",{attrs:{type:"Titanium.UI.DashboardView.wobble"}},[e._v("wobble")]),e._v(" property.")],1),e._v(" "),t("p",[e._v("If a dashboard contains more than 9 items, it will be paged into screens in a 3 x 3 formation\nusing its built-in scrollable view. A paging control is added to the bottom of the view to\nindicate the active page.")]),e._v(" "),t("p",[e._v("Note that a dashboard is only intended to be used in "),t("type-link",{attrs:{type:"Titanium.UI.PORTRAIT"}},[e._v("PORTRAIT")]),e._v("\norientation mode.")],1),e._v(" "),t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),t("h3",{attrs:{id:"dashboard-demo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dashboard-demo","aria-hidden":"true"}},[e._v("#")]),e._v(" Dashboard Demo")]),e._v(" "),t("p",[e._v("Create a toolbar with an edit/done button and a dashboard of items on a single screen.\nSet the badge value for some items, and allow them to be reset with a click. Enter edit mode\nwith a longpress of a dashboard item (default behavior). Toggle edit mode with a click to\nthe toolbar button.")]),e._v(" "),t("p",[e._v("Copy your image files to the local project "),t("code",[e._v("/images/dashboard")]),e._v(" directory.")]),e._v(" "),t("pre",[t("code",[e._v("var win = Ti.UI.createWindow({\n    backgroundColor: '#13386c'\n});\n\nvar button = Ti.UI.createButton({\n    title: 'Edit',\n    style: Ti.UI.iOS.SystemButtonStyle.DONE,\n});\n\nvar toolbar = Ti.UI.iOS.createToolbar({\n    items: [button],\n    top: 0\n});\nwin.add(toolbar);\n\nvar label = Ti.UI.createLabel({\n  color: 'white',\n  font: { fontSize: 14 },\n  text: 'Click an item to reset badge\\nPress and hold an item to enable edit mode',\n  textAlign: Ti.UI.TEXT_ALIGNMENT_CENTER,\n  top: 55,\n  height: 40,\n  width: 300\n});\nwin.add(label);\n\nvar dashboardData = [];\nvar itemData = [\n  { name: 'account', badge: 10 },\n  { name: 'cases', badge: 2 },\n  { name: 'calls', badge: 2 },\n  { name: 'contacts', badge: 5},\n  { name: 'emps' }, \n  { name: 'leads' },\n  { name: 'meetings', badge: 3 },\n  { name: 'opps',  badge:  126 }, // badge will be displayed as \"99+\"\n  { name: 'tasks' }\n];\n\nfor (var i = 0; i < itemData.length; i++) {\n  var item = Ti.UI.createDashboardItem({\n    badge: itemData[i].badge,\n    image: '/images/dashboard/' + itemData[i].name + '_off.png',\n    selectedImage: '/images/dashboard/' + itemData[i].name + '_on.png',\n    label: itemData[i].name\n  });\n  dashboardData.push(item);\n}\n\nvar dashboard = Ti.UI.createDashboardView({\n  data: dashboardData,\n  wobble: true,\n  top: 100\n});\nwin.add(dashboard);\n\nvar isEditable = false;\n\nbutton.addEventListener('click', function(e) {\n  if (isEditable) {\n    dashboard.stopEditing();\n  } else {\n    dashboard.startEditing();\n  }\n});\n\ndashboard.addEventListener('edit', function(e) {\n  button.title = 'Done';\n  button.style = Ti.UI.iOS.SystemButtonStyle.DONE;\n  isEditable = true;\n});\n\ndashboard.addEventListener('commit', function(e) {\n  button.title = 'Edit';\n  button.style = Ti.UI.iOS.SystemButtonStyle.PLAIN;\n  isEditable = false;\n});\n\ndashboard.addEventListener('click', function(e) {\n  e.item.badge = 0;\n});\n\nwin.open();\n")])]),e._v(" "),t("h3",{attrs:{id:"alloy-xml-markup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alloy-xml-markup","aria-hidden":"true"}},[e._v("#")]),e._v(" Alloy XML Markup")]),e._v(" "),t("p",[e._v("Previous example as an Alloy view.")]),e._v(" "),t("p",[e._v("dashboard.xml:")]),e._v(" "),t("pre",[t("code",[e._v('<Alloy>\n    <Window id="win" backgroundColor="#13386c">\n        <Toolbar id="toolbar" top="0">\n            <Items>\n                <Button id="button" onClick="changeMode">Edit</Button>\n            </Items>\n        </Toolbar>\n        <Label id="label" color="white" top="55" height="40" width="300">\n            Click an item to reset badge\\nPress and hold an item to enable edit mode\n        </Label>\n\n        <DashboardView id="dashboard" top="100" wobble="true"\n            onClick="resetBadge" onEdit="handleEdit" onCommit="handleCommit">\n\n            <DashboardItem image="account_off.png" selectedImage="account_on.png" badge="10" label="account"/>\n            <DashboardItem image="calls_off.png" selectedImage="calls_on.png" badge="110" label="calls"/>\n            <DashboardItem image="cases_off.png" selectedImage="cases_on.png" label="cases"/>\n            <DashboardItem image="contacts_off.png" selectedImage="contacts_on.png" badge="23" label="contacts"/>\n            <DashboardItem image="emps_off.png" selectedImage="emps_on.png" label="employees"/>\n            <DashboardItem image="leads_off.png" selectedImage="leads_on.png" badge="1" label="leads"/>\n            <DashboardItem image="meetings_off.png" selectedImage="meetings_on.png" badge="5" label="meetings"/>\n            <DashboardItem image="opps_off.png" selectedImage="opps_on.png" label="opps"/>\n            <DashboardItem image="tasks_off.png" selectedImage="tasks_on.png" label="tasks"/>\n\n        </DashboardView>\n\n    </Window>\n</Alloy>\n')])]),e._v(" "),t("p",[e._v("dashboard.js:")]),e._v(" "),t("pre",[t("code",[e._v("var isEditable = false;\n\nfunction changeMode(e) {\n  if (isEditable) {\n    $.dashboard.stopEditing();\n  } else {\n    $.dashboard.startEditing();\n  }\n}\n\nfunction handleEdit(e) {\n  $.button.title = 'Done';\n  $.button.style = Ti.UI.iOS.SystemButtonStyle.DONE;\n  isEditable = true;\n}\n\nfunction handleCommit(e) {\n  $.button.title = 'Edit';\n  $.button.style = Ti.UI.iOS.SystemButtonStyle.PLAIN;\n  isEditable = false;\n}\n\nfunction resetBadge(e) {\n  e.item.badge = 0;\n}\n")])]),e._v(" "),t("ApiDocs")],1)},[],!1,null,null,null);i.options.__file="dashboardview.md";a.default=i.exports}}]);