(window.webpackJsonp=window.webpackJsonp||[]).push([[318],{585:function(e,t,a){"use strict";a.r(t);var r=a(14),i=Object(r.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"titanium-stream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#titanium-stream","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.Stream")]),e._v(" "),a("ProxySummary"),e._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),a("p",[e._v("This module provides a set of methods for interacting with\n"),a("type-link",{attrs:{type:"Titanium.IOStream"}},[e._v("IOStream")]),e._v(" objects, including asynchronous versions of the\n"),a("code",[e._v("read")]),e._v(" and "),a("code",[e._v("write")]),e._v(" methods offered by all stream objects. These\nmethods should be used in any place where reading from or writing\nto a stream might block.")],1),e._v(" "),a("p",[e._v("See also:")]),e._v(" "),a("ul",[a("li",[a("type-link",{attrs:{type:"Titanium.IOStream"}},[e._v("Titanium.IOStream")])],1),e._v(" "),a("li",[a("type-link",{attrs:{type:"Titanium.BlobStream"}},[e._v("Titanium.BlobStream")])],1),e._v(" "),a("li",[a("type-link",{attrs:{type:"Titanium.BufferStream"}},[e._v("Titanium.BufferStream")])],1),e._v(" "),a("li",[a("type-link",{attrs:{type:"Titanium.Filesystem.FileStream"}},[e._v("Titanium.Filesystem.FileStream")])],1),e._v(" "),a("li",[a("type-link",{attrs:{type:"Titanium.Network.Socket.TCP"}},[e._v("Titanium.Network.Socket.TCP")])],1)]),e._v(" "),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("h3",{attrs:{id:"stream-pump-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-pump-example","aria-hidden":"true"}},[e._v("#")]),e._v(" Stream.pump Example")]),e._v(" "),a("p",[e._v("The following example shows how to use the "),a("type-link",{attrs:{type:"Titanium.Stream.pump"}},[e._v("pump")]),e._v(" method.")],1),e._v(" "),a("pre",[a("code",[e._v('var pumpCallback = function(arg) {\n    if(arg.bytesProcessed == -1) {\n        Ti.API.info("At end of stream.");\n    } else {\n        Ti.API.info(String.format("Received %.0f bytes. Total: %.0f bytes.", \n                    arg.bytesProcessed, arg.totalBytesProcessed));\n        // do something useful with the data in arg.buffer\n    }\n}\nTi.Stream.pump(inputStream, pumpCallback, 1024);\n')])]),e._v(" "),a("h3",{attrs:{id:"write-stream-to-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#write-stream-to-file","aria-hidden":"true"}},[e._v("#")]),e._v(" Write Stream to File")]),e._v(" "),a("p",[e._v("The following example uses the "),a("type-link",{attrs:{type:"Titanium.Stream.writeStream"}},[e._v("writeStream")]),e._v(" method\nto copy the contents of an input stream to a file. This can be used for any kind\nof input stream -- "),a("code",[e._v("BufferStream")]),e._v(", "),a("code",[e._v("FileStream")]),e._v(", or "),a("code",[e._v("Socket.TCP")]),e._v(".")],1),e._v(" "),a("pre",[a("code",[e._v("var outFileStream = Ti.Filesystem.getFile('outfile.txt').open(Ti.Filesystem.MODE_WRITE);\n\n// writes all data from inputStream to outFileStream in chunks of 1024 bytes\nvar bytesWritten = Ti.Stream.writeStream(inputStream, outFileStream, 1024);\nTi.API.info('Wrote ' + bytesWritten + ' bytes, closing both streams.');\n\ninputStream.close();\noutFileStream.close();\n")])]),e._v(" "),a("ApiDocs")],1)},[],!1,null,null,null);i.options.__file="stream.md";t.default=i.exports}}]);