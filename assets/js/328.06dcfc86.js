(window.webpackJsonp=window.webpackJsonp||[]).push([[328],{558:function(e,n,t){"use strict";t.r(n);var r=t(14),o=Object(r.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"titanium-ui-android-progressindicator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#titanium-ui-android-progressindicator","aria-hidden":"true"}},[e._v("#")]),e._v(" Titanium.UI.Android.ProgressIndicator")]),e._v(" "),t("ProxySummary"),e._v(" "),t("h2",{attrs:{id:"overview"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v(" Overview")]),e._v(" "),t("p",[e._v("A progress indicator can be used to show the progress of an operation in the UI to let the\nuser know that some action is taking place. It is used to indicate an ongoing activity of\ndeterminate or indeterminate length.")]),e._v(" "),t("p",[e._v("Use the "),t("type-link",{attrs:{type:"Titanium.UI.Android.createProgressIndicator"}},[e._v("Titanium.UI.Android.createProgressIndicator")]),e._v(" method or "),t("strong",[t("code",[e._v("<ProgressIndicator>")])]),e._v(" Alloy\nelement to create a progress indicator.")],1),e._v(" "),t("p",[e._v("A progress indicator can be either a progress dialog or a horizontal progress bar in the title\nof the window. The progress dialog is a modal dialog that blocks the UI. See also:\n"),t("type-link",{attrs:{type:"Titanium.UI.Android.PROGRESS_INDICATOR_DIALOG"}},[e._v("Titanium.UI.Android.PROGRESS_INDICATOR_DIALOG")]),e._v(",\n"),t("type-link",{attrs:{type:"Titanium.UI.Android.PROGRESS_INDICATOR_STATUS_BAR"}},[e._v("Titanium.UI.Android.PROGRESS_INDICATOR_STATUS_BAR")]),e._v(".")],1),e._v(" "),t("p",[e._v("Calling "),t("type-link",{attrs:{type:"Titanium.UI.Android.ProgressIndicator.show"}},[e._v("Titanium.UI.Android.ProgressIndicator.show")]),e._v(" displays the indicator,\nand calling "),t("type-link",{attrs:{type:"Titanium.UI.Android.ProgressIndicator.hide"}},[e._v("Titanium.UI.Android.ProgressIndicator.hide")]),e._v(" removes it.")],1),e._v(" "),t("p",[e._v("To display a horizontal progress bar in the title of a heavyweight window,\nwait for the window to open before creating the progress bar.\nFor example, in the sample code below, for it to work in the status bar,\ncreate the progress bar inside the event listener, which waits for the open event.")]),e._v(" "),t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),t("h3",{attrs:{id:"simple-progress-indicator"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#simple-progress-indicator","aria-hidden":"true"}},[e._v("#")]),e._v(" Simple Progress Indicator")]),e._v(" "),t("p",[e._v("Click the button to show a progress indicator while\nsome code executes and hide it on completion.")]),e._v(" "),t("pre",[t("code",[e._v("Ti.UI.backgroundColor = 'white';\n\nvar win = Ti.UI.createWindow({\n  backgroundColor: 'blue'\n});\n\nvar button = Ti.UI.createButton({\n  title: 'Show Progress Dialog'\n});\n\nvar progressIndicator = Ti.UI.Android.createProgressIndicator({\n  message: 'Loading...',\n  location: Ti.UI.Android.PROGRESS_INDICATOR_DIALOG,\n  type: Ti.UI.Android.PROGRESS_INDICATOR_DETERMINANT,\n  cancelable: true,\n  min: 0,\n  max: 10\n});\n\nbutton.addEventListener('click', function (e) {\n  progressIndicator.show();\n  var value = 0;\n  setInterval(function(){\n    if (value > 10) {\n        return;\n    }\n    progressIndicator.value = value;\n    value ++;\n  }, 200);\n  // do some work that takes 3 seconds\n  // ie. replace the following setTimeout block with your code\n  setTimeout(function(){\n    progressIndicator.hide();\n  }, 3000);\n});\n\nwin.add(button);\nwin.open();\n")])]),e._v(" "),t("h3",{attrs:{id:"alloy-xml-markup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alloy-xml-markup","aria-hidden":"true"}},[e._v("#")]),e._v(" Alloy XML Markup")]),e._v(" "),t("p",[e._v("Previous example as an Alloy view-controller.")]),e._v(" "),t("p",[e._v("index.xml:")]),e._v(" "),t("pre",[t("code",[e._v('<Alloy>\n    <Window backgroundColor="blue">\n        <Button id="button" onClick="showIndicator">Show Progress Dialog</Button>\n\n        <ProgressIndicator ns="Ti.UI.Android" platform="android" id="progressIndicator"\n         message="Loading..." min="0" max="10" cancelable="true"\n         location="Ti.UI.Android.PROGRESS_INDICATOR_DIALOG"\n         type="Ti.UI.Android.PROGRESS_INDICATOR_DETERMINANT" />\n    </Window>\n</Alloy>\n')])]),e._v(" "),t("p",[e._v("index.js:")]),e._v(" "),t("pre",[t("code",[e._v("function showIndicator(e) {\n    $.progressIndicator.show();\n    var value = 0;\n    setInterval(function(){\n        if (value > 10) {\n            return;\n        }\n        $.progressIndicator.value = value;\n        value ++;\n    }, 200);\n    // do some work that takes 3 seconds\n    // ie. replace the following setTimeout block with your code\n    setTimeout(function(){\n        $.progressIndicator.hide();\n    }, 3000);\n}\n$.index.open();\n")])]),e._v(" "),t("ApiDocs")],1)},[],!1,null,null,null);o.options.__file="progressindicator.md";n.default=o.exports}}]);