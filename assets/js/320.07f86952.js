(window.webpackJsonp=window.webpackJsonp||[]).push([[320],{582:function(t,a,e){"use strict";e.r(a);var i=e(14),n=Object(i.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"titanium-ui-2dmatrix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#titanium-ui-2dmatrix","aria-hidden":"true"}},[t._v("#")]),t._v(" Titanium.UI.2DMatrix")]),t._v(" "),e("ProxySummary"),t._v(" "),e("h2",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview","aria-hidden":"true"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("p",[t._v("A 2D matrix is used to rotate, scale, translate, or skew the objects in a two-dimensional space.\nA 2D affine transformation can be  represented by a 3 by 3 matrix:")]),t._v(" "),e("table",[e("tr",[e("td",[e("i",[t._v("a")])]),e("td",[e("i",[t._v("b")])]),e("td",[t._v("0")])]),t._v(" "),e("tr",[e("td",[e("i",[t._v("c")])]),e("td",[e("i",[t._v("d")])]),e("td",[t._v("0")])]),t._v(" "),e("tr",[e("td",[e("i",[t._v("tx")])]),e("td",[e("i",[t._v("ty")])]),e("td",[t._v("1")])])]),t._v(" "),e("p",[t._v("The third column is constant (0,0,1).")]),t._v(" "),e("p",[t._v("On iOS, the matrix terms, "),e("code",[t._v("a")]),t._v(", "),e("code",[t._v("b")]),t._v(", "),e("code",[t._v("c")]),t._v(", "),e("code",[t._v("d")]),t._v(", "),e("code",[t._v("tx")]),t._v(", and "),e("code",[t._v("ty")]),t._v(",\nare available as properties. On Android, the matrix terms are not available as properties.")]),t._v(" "),e("p",[t._v("Use the "),e("type-link",{attrs:{type:"Titanium.UI.create2DMatrix"}},[t._v("Titanium.UI.create2DMatrix")]),t._v(" method to create a new 2D matrix. You can\npass an optional "),e("type-link",{attrs:{type:"MatrixCreationDict"}},[t._v("MatrixCreationDict")]),t._v(" dictionary to the method to initialize the\nmatrix. For example, the following creates a new matrix with a 45 degree rotation.")],1),t._v(" "),e("pre",[e("code",[t._v("var m = Ti.UI.create2DMatrix({\n    rotate: 45\n});\n")])]),t._v(" "),e("p",[t._v("If you pass no arguments, "),e("code",[t._v("create2DMatrix")]),t._v(" returns an identity matrix.")]),t._v(" "),e("h2",{attrs:{id:"examples"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),e("h3",{attrs:{id:"apply-a-2d-matrix-to-a-label"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apply-a-2d-matrix-to-a-label","aria-hidden":"true"}},[t._v("#")]),t._v(" Apply a 2D Matrix to a Label")]),t._v(" "),e("p",[t._v("The following uses a 2D matrix to translate a label in the y direction.")]),t._v(" "),e("pre",[e("code",[t._v("var win = Ti.UI.createWindow({\n  backgroundColor: 'white'\n});\n\nvar label = Ti.UI.createLabel({\n  font:{fontSize:50},\n  text:'Titanium',\n  textAlign:'center',\n  top: 100\n});\nwin.add(label);\n\nvar button = Ti.UI.createButton({\n  title:'Animate',\n  bottom:20,\n  width:200, height:40\n});\nwin.add(button);\n\nbutton.addEventListener('click', function(){\n  var t1 = Ti.UI.create2DMatrix();\n  t1 = t1.translate(0, 300);\n  var a1 = Ti.UI.createAnimation();\n  a1.transform = t1;\n  a1.duration = 800;\n  label.animate(a1);\n});\nwin.open();\n")])]),t._v(" "),e("ApiDocs")],1)},[],!1,null,null,null);n.options.__file="2dmatrix.md";a.default=n.exports}}]);