(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{484:function(e,n,t){"use strict";t.r(n);var a=t(14),i=Object(a.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"messagereply"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#messagereply","aria-hidden":"true"}},[e._v("#")]),e._v(" MessageReply")]),e._v(" "),t("ProxySummary"),e._v(" "),t("h2",{attrs:{id:"examples"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#examples","aria-hidden":"true"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),t("h3",{attrs:{id:"creating-a-watch-session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-watch-session","aria-hidden":"true"}},[e._v("#")]),e._v(" Creating a Watch Session")]),e._v(" "),t("p",[e._v("The following example demonstrates how to create a new watch session, and call methods to transfer\ndata to the watch. Also include event listeners for receiving data from the watch.")]),e._v(" "),t("p",[e._v("It is important to note that this only works if there is a corresponding watchOS app written\nin Objective-C / Swift in the Xcode project inside the extensions folder of the Titanium Project.")]),e._v(" "),t("h4",{attrs:{id:"app-js"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#app-js","aria-hidden":"true"}},[e._v("#")]),e._v(" app.js")]),e._v(" "),t("pre",[t("code",[e._v("Ti.WatchSession.activateSession();\n\nvar win = Ti.UI.createWindow({\n    backgroundColor: 'white'\n});\n\nvar eventsArea = Ti.UI.createTextArea({\n  borderWidth: 2,\n  borderColor: '#bbb',\n  borderRadius: 5,\n  color: '#888',\n  font: {fontSize:16},\n  textAlign: 'left',\n  value: 'This is where we listen for events',\n  bottom: 10,\n  width: 300, height : 140\n});\n\nwin.add(eventsArea);\n\nvar imageView = Ti.UI.createImageView ({\n    top: 240,\n    width: 80,\n    height: 80\n});\n\nwin.add(imageView);\n\nvar statusBtn = Ti.UI.createButton({\n    title: 'status me',\n    top: 40\n});\n\nstatusBtn.addEventListener('click', function(e) {\n    eventsArea.value += '\\nbtn pressed '\n    + '\\nwatchOS is supported: ' + Ti.WatchSession.isSupported\n    + '\\nwatch is paired: ' + Ti.WatchSession.isPaired\n    + '\\nwatchApp is installed: ' + Ti.WatchSession.isWatchAppInstalled\n    + '\\nwatchComplication is enabled: ' + Ti.WatchSession.isComplicationEnabled\n    + '\\nwatch is reachable: ' + Ti.WatchSession.isReachable\n    + '\\nMost recent app context: ' + JSON.stringify(Ti.WatchSession.recentApplicationContext);\n})\nwin.add(statusBtn);\n\nvar sendMsgBtn = Ti.UI.createButton({\n    title: 'send Message to watch',\n    top: 80\n});\n\nsendMsgBtn.addEventListener('click', function(e) {\n    Ti.WatchSession.sendMessage({\n        message: 'Hi',\n        from: 'app',\n        type: 'message'\n    });\n});\n\nvar sendUserInfoBtn = Ti.UI.createButton({\n    title: 'send User Info to watch',\n    top: 120\n});\n\nsendUserInfoBtn.addEventListener('click', function(e) {\n    Ti.WatchSession.transferUserInfo({\n        data: 'user info from app',\n        created: '2015'\n    });\n});\n\nvar sendAppContextBtn = Ti.UI.createButton({\n    title: 'update app context to watch',\n    top: 160\n});\n\nsendAppContextBtn.addEventListener('click', function(e) {\n    Ti.WatchSession.updateApplicationContext({\n        status: 'Application Context from app',\n        updates: 2\n    });\n});\n\nvar sendFileBtn = Ti.UI.createButton({\n    title: 'send File to watch',\n    top: 200\n});\n\nsendFileBtn.addEventListener('click', function(e) {\n    Ti.WatchSession.transferFile({\n        fileURL: '/images/default_app_logo.png',\n        metaData: {\n            data: 'appcelerator logo'\n        }\n    });\n});\n\nTi.WatchSession.addEventListener('receivemessage', function(e) {\n    eventsArea.value += '\\nreceivemessage '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('receiveuserinfo', function(e) {\n    eventsArea.value += '\\nreceiveuserinfo '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('receivefile', function(e) {\n    eventsArea.value += '\\nreceivefile ' + '\\n' + JSON.stringify(e);\n    var cacheFile = e.data.getFile();\n    var downloadedFile = Ti.Filesystem.getFile(Ti.Filesystem.applicationDataDirectory, cacheFile.getName());\n    downloadedFile.write(e.data);\n    imageView.setImage(downloadedFile);\n});\n\nTi.WatchSession.addEventListener('receiveapplicationcontext', function(e) {\n    eventsArea.value += '\\nreceiveapplicationcontext '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('watchstatechanged', function(e) {\n    eventsArea.value += '\\nwatchstatechanged '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('reachabilitychanged', function(e) {\n    eventsArea.value += '\\nreachabilitychanged '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('finishfiletransfer', function(e) {\n    eventsArea.value += '\\nfinishfiletransfer '\n    + '\\n' + JSON.stringify(e);\n});\n\nTi.WatchSession.addEventListener('finishuserinfotransfer', function(e) {\n    eventsArea.value += '\\nfinishuserinfotransfer '\n    + '\\n' + JSON.stringify(e);\n});\nwin.add(sendMsgBtn);\nwin.add(sendUserInfoBtn);\nwin.add(sendFileBtn);\nwin.add(sendAppContextBtn);\n\nwin.open();\n")])]),e._v(" "),t("ApiDocs")],1)},[],!1,null,null,null);i.options.__file="messagereply.md";n.default=i.exports}}]);