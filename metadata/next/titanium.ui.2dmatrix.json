{"name":"Titanium.UI.2DMatrix","summary":"<p>The 2D Matrix is an object for holding values for an affine transformation matrix.</p>\n","deprecated":null,"events":[],"methods":[{"name":"invert","deprecated":null,"summary":"<p>Returns a matrix constructed by inverting this matrix.</p>\n","description":null,"filename":"Titanium.UI.2DMatrix.invert-method","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"parameters":[],"returns":{"type":"Titanium.UI.2DMatrix"}},{"name":"multiply","deprecated":null,"summary":"<p>Returns a matrix constructed by combining two existing matrices.</p>\n","description":"<p>The argument, <code>t2</code> is concatenated to the matrix instance against which the function is invoked. The\nresulting matrix is the result of multiplying this matrix by <code>t2</code>. You might perform several\nmultiplications in order to create a single matrix that contains the cumulative effects of\nseveral transformations.</p>\n<p>Note that matrix operations are not commutative -- the order in which you concatenate matrices\nis important. That is, the result of multiplying matrix <code>t1</code> by matrix <code>t2</code> does not necessarily\nequal the result of multiplying matrix <code>t2</code> by matrix <code>t1</code>.</p>\n","filename":"Titanium.UI.2DMatrix.multiply-method","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"parameters":[{"name":"t2","deprecated":null,"summary":"The second matrix.","description":null,"type":"Titanium.UI.2DMatrix","optional":false,"filename":"Titanium.UI.2DMatrix.multiply-method.t2-param"}],"returns":{"type":"Titanium.UI.2DMatrix"}},{"name":"rotate","deprecated":null,"summary":"<p>Returns a matrix constructed by rotating this matrix.</p>\n","description":"<p>There are two distinct versions of this method, depending on whether one argument\nor two are specified.</p>\n<ul>\n<li><code>rotate(angle)</code>. The standard <code>rotate</code> method.</li>\n<li><code>rotate(fromAngle, toAngle)</code>. Android only. Used for specifying rotation\nanimations.</li>\n</ul>\n<p>In both cases, a positive value specifies clockwise rotation and a negative value\nspecifies counter-clockwise rotation.</p>\n<p>Details for each version are discussed below.</p>\n<h4 id=\"rotate-angle\"><a class=\"header-anchor\" href=\"#rotate-angle\" aria-hidden=\"true\">#</a> rotate(angle)</h4>\n<p>Returns a matrix constructed by rotating this matrix.</p>\n<p>Note that the resulting  matrix only expresses the final transformation, not the\ndirection of the rotation. For example, the matrix produced by <code>m1.rotate(-10)</code>\nis identical to the matrix produced by <code>m1.rotate(350)</code> and <code>m1.rotate(710)</code>.</p>\n<p>Note that if you specify a rotation matrix as the <code>transform</code> property of an\nanimation, the animation animates the view from its current rotation to the\nrotation represented by the matrix by its shortest path. So to rotate a view\nin a complete circle, the easiest method is to chain together three animations,\nrotating 120 degrees each time.</p>\n<p>For the purposes of animation, it should be noted that the rotation angle is\nnormalized to the range -180 &lt;= angle &lt; 180. In other\nwords, an angle of 180 degrees is normalized to -180. This makes no difference\nexcept when determining which direction an animation rotates. 179 degrees rotates\nrotate clockwise, but 180 degrees is normalized to -180, so rotates counter-clockwise.</p>\n<h4 id=\"rotate-angle-toangle-android-only\"><a class=\"header-anchor\" href=\"#rotate-angle-toangle-android-only\" aria-hidden=\"true\">#</a> rotate(angle, toAngle) -- Android Only</h4>\n<p>This is an Android-specific method used for creating rotation animations.\nReturns a <code>2DMatrix</code> object that represents a rotation from <code>angle</code> to <code>toAngle</code>.</p>\n<p>Angles are specified in degrees. Positive values represent clockwise rotation, and negative values\nrepresent counter-clockwise rotation. Values are not normalized, so for example an\nangle of 720 degrees represents two complete clockwise revolutions.</p>\n<p>The resulting object cannot be expressed as an affine transform, but can be used with the\n<a href=\"Titanium.UI.Animation.transform\">Titanium.UI.Animation.transform</a> property to specify a rotation animation.</p>\n","filename":"Titanium.UI.2DMatrix.rotate-method","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"parameters":[{"name":"angle","deprecated":null,"summary":"Angle to rotate to, in degrees. On Android, if `angleTo` is specified, this specifies\nthe starting angle for a rotation animation.\n","description":null,"type":"Number","optional":false,"filename":"Titanium.UI.2DMatrix.rotate-method.angle-param"},{"name":"toAngle","deprecated":null,"summary":"Ending angle for a rotation animation, in degrees. Android only.","description":null,"type":"Number","optional":true,"filename":"Titanium.UI.2DMatrix.rotate-method.toAngle-param"}],"returns":{"type":"Titanium.UI.2DMatrix"}},{"name":"scale","deprecated":null,"summary":"<p>Returns a <code>2DMatrix</code> object that specifies a scaling animation from one scale to another.</p>\n","description":"<p>There are two distinct versions of this method, depending on whether two arguments\nor four are specified.</p>\n<ul>\n<li><code>scale(sx, sy)</code>. The standard <code>scale</code> method.</li>\n<li><code>scale(fromSx, fromSy, toSx, toSy)</code>. Android only. Used for specifying a\nscaling animation from one size to another.</li>\n</ul>\n<h4 id=\"scale-sx-sy\"><a class=\"header-anchor\" href=\"#scale-sx-sy\" aria-hidden=\"true\">#</a> scale(sx, sy)</h4>\n<p>Returns a matrix constructed by applying a scale transform to this matrix.\nScaling the current matrix by <code>sx</code> along the X axis and by <code>sy</code> along the Y axis.</p>\n<h4 id=\"scale-sx-sy-tosx-tosy-android-only\"><a class=\"header-anchor\" href=\"#scale-sx-sy-tosx-tosy-android-only\" aria-hidden=\"true\">#</a> scale(sx, sy, toSx, toSy) -- Android Only</h4>\n<p>This Android-specific method returns a <code>2DMatrix</code> object that can be used to\ncreate a scaling animation from one scale factor to another scale factor.</p>\n<p>The resulting object cannot be expressed as an affine transform, but can be used with the\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/animation.html#transform\">transform</a> property to specify a scaling animation.</p>\n","filename":"Titanium.UI.2DMatrix.scale-method","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"parameters":[{"name":"sx","deprecated":null,"summary":"Horizontal scaling factor. If `toSx` and `toSy` are specified,\nthis specifies the starting horizontal scaling factor, at the beginning\nof an animation.\n","description":null,"type":"Number","optional":false,"filename":"Titanium.UI.2DMatrix.scale-method.sx-param"},{"name":"sy","deprecated":null,"summary":"Vertical scaling factor. If `toSx` and `toSy` are specified,\nthis specifies the starting vertical scaling factor, at the beginning of\nan animation.\n","description":null,"type":"Number","optional":false,"filename":"Titanium.UI.2DMatrix.scale-method.sy-param"},{"name":"toSx","deprecated":null,"summary":"Ending horizontal scaling factor, at the end of an animation.\nIf specified, `toSy` must be specified as well. Android only.\n","description":null,"type":"Number","optional":true,"filename":"Titanium.UI.2DMatrix.scale-method.toSx-param"},{"name":"toSy","deprecated":null,"summary":"Ending vertical scaling factor, at the end of an animation.\nIf specified, `toSx` must be specified as well. Android only.\n","description":null,"type":"Number","optional":true,"filename":"Titanium.UI.2DMatrix.scale-method.toSy-param"}],"returns":{"type":"Titanium.UI.2DMatrix"}},{"name":"translate","deprecated":null,"summary":"<p>Returns a matrix constructed by applying a translation transform to this matrix.</p>\n","description":null,"filename":"Titanium.UI.2DMatrix.translate-method","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"parameters":[{"name":"tx","deprecated":null,"summary":"Horizontal component of the translation.","description":null,"type":"Number","optional":false,"filename":"Titanium.UI.2DMatrix.translate-method.tx-param"},{"name":"ty","deprecated":null,"summary":"Vertical component of the translation.","description":null,"type":"Number","optional":false,"filename":"Titanium.UI.2DMatrix.translate-method.ty-param"}],"returns":{"type":"Titanium.UI.2DMatrix"}}],"extends":"Titanium.Proxy","properties":[{"name":"rotate","deprecated":null,"summary":"<p>The entry at position [1,1] in the matrix.</p>\n","description":null,"filename":"Titanium.UI.2DMatrix.a-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Number"},{"name":"b","deprecated":null,"summary":"<p>The entry at position [1,2] in the matrix.</p>\n","description":null,"filename":"Titanium.UI.2DMatrix.b-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Number"},{"name":"c","deprecated":null,"summary":"<p>The entry at position [2,1] in the matrix.</p>\n","description":null,"filename":"Titanium.UI.2DMatrix.c-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Number"},{"name":"d","deprecated":null,"summary":"<p>The entry at position [2,2] in the matrix.</p>\n","description":null,"filename":"Titanium.UI.2DMatrix.d-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Number"},{"name":"tx","deprecated":null,"summary":"<p>The entry at position [3,1] in the matrix.</p>\n","description":null,"filename":"Titanium.UI.2DMatrix.tx-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Number"},{"name":"ty","deprecated":null,"summary":"<p>The entry at position [3,2] in the matrix.</p>\n","description":null,"filename":"Titanium.UI.2DMatrix.ty-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Number"}],"platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"filename":null,"type":"object","subtype":"proxy","constants":[]}