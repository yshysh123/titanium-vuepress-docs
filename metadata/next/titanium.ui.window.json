{"name":"Titanium.UI.Window","summary":"<p>The Window is an empty drawing surface or container.</p>\n","deprecated":null,"events":[{"name":"focus","deprecated":null,"summary":"<p>Fired when the window gains focus.</p>\n","description":"<p>The listener for this event must be defined before this window\nis opened.</p>\n<p>On Android, this event also fires when the activity enters the foreground\n(after the activity enters the resume state).</p>\n<p>On iOS, this event does not fire after the application returns to the foreground\nif it was previously backgrounded.\nThe application needs to monitor the <a href=\"/titanium-vuepress-docs/api/titanium/app.html#resumed\">resumed</a> event.\nSee <a href=\"/titanium-vuepress-docs/api/titanium/app.html\">Titanium.App</a> for more information on the iOS application lifecycle.</p>\n","filename":"Titanium.UI.Window.focus-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null},{"name":"android:back","deprecated":{"notes":"<p>Use <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#androidback\">androidback</a> instead.</p>\n","since":"3.0.0"},"summary":"<p>Fired when the Back button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for the Back button.\nTo restore default behavior, remove the listener. It is recommended that you only\nhave one handler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.android-back-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null},{"name":"android:camera","deprecated":{"notes":"<p>Use <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#androidcamera\">androidcamera</a> instead.</p>\n","since":"3.0.0"},"summary":"<p>Fired when the Camera button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have one\nhandler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.android-camera-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null},{"name":"android:focus","deprecated":{"notes":"<p>Use <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#androidfocus\">androidfocus</a> instead.</p>\n","since":"3.0.0"},"summary":"<p>Fired when the Camera button is half-pressed then released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have one\nhandler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.android-focus-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null},{"name":"android:search","deprecated":{"notes":"<p>Use <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#androidsearch\">androidsearch</a> instead.</p>\n","since":"3.0.0"},"summary":"<p>Fired when the Search button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have\none handler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.android-search-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null},{"name":"android:voldown","deprecated":{"notes":"<p>Use <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#androidvoldown\">androidvoldown</a> instead.</p>\n","since":"3.0.0"},"summary":"<p>Fired when the volume down button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have one\nhandler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.android-voldown-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null},{"name":"android:volup","deprecated":{"notes":"<p>Use <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#androidvolup\">androidvolup</a> instead.</p>\n","since":"3.0.0"},"summary":"<p>Fired when the volume up button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have one\nhandler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.android-volup-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null},{"name":"androidback","deprecated":null,"summary":"<p>Fired when the back button is pressed by the user.</p>\n","description":"<p>This event is fired when the current window's activity detects\na back button press by the user to navigate back.</p>\n<p>By default this event would trigger the current activity to be finished\nand removed from the task stack. Subscribing to this event with a listener\nwill prevent the default behavior. To finish the activity from your listener\njust call the <em>close</em> method of the window.</p>\n<p>This event replaces the android:back event. Some behavior\nchanges may exist such as the event no longer firing when the\nuser dismisses the keyboard with the back button or when the\nuser closes a full-screen video which is embedded in a web view\nwith the back button.</p>\n<p>As of 5.0.0, you can create an event that can prevent accidental closure of the\napp due to hitting the back button to many times.</p>\n<pre><code>var win = Ti.UI.createWindow(\n    { // some code... }\n);\n// more code\nwin.addEventListener(&quot;windows:back&quot;, function()\n    { alert(&quot;Back pressed&quot;); }\n);\n</code></pre>\n","filename":"Titanium.UI.Window.androidback-event","platforms":[{"pretty_name":"Android","since":"3.0.0","name":"android"}],"inherits":null},{"name":"androidcamera","deprecated":null,"summary":"<p>Fired when the Camera button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have one\nhandler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.androidcamera-event","platforms":[{"pretty_name":"Android","since":"3.0.0","name":"android"}],"inherits":null},{"name":"androidfocus","deprecated":null,"summary":"<p>Fired when the Camera button is half-pressed then released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have one\nhandler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.androidfocus-event","platforms":[{"pretty_name":"Android","since":"3.0.0","name":"android"}],"inherits":null},{"name":"androidsearch","deprecated":null,"summary":"<p>Fired when the Search button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have\none handler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.androidsearch-event","platforms":[{"pretty_name":"Android","since":"3.0.0","name":"android"}],"inherits":null},{"name":"androidvoldown","deprecated":null,"summary":"<p>Fired when the volume down button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have one\nhandler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.androidvoldown-event","platforms":[{"pretty_name":"Android","since":"3.0.0","name":"android"}],"inherits":null},{"name":"androidvolup","deprecated":null,"summary":"<p>Fired when the volume up button is released.</p>\n","description":"<p>Setting a listener disables the default key handling for this button. To restore\ndefault behavior, remove the listener. It is recommended that you only have one\nhandler per heavyweight window.</p>\n","filename":"Titanium.UI.Window.androidvolup-event","platforms":[{"pretty_name":"Android","since":"3.0.0","name":"android"}],"inherits":null},{"name":"blur","deprecated":null,"summary":"<p>Fired when the window loses focus.</p>\n","description":"<p>On Android, this event also fires before putting the activity in the background\n(before the activity enters the pause state).</p>\n<p>On iOS, this event does not fire before putting the application in the background.\nThe application needs to monitor the <a href=\"/titanium-vuepress-docs/api/titanium/app.html#pause\">pause</a> event.\nSee <a href=\"/titanium-vuepress-docs/api/titanium/app.html\">Titanium.App</a> for more information on the iOS application lifecycle.</p>\n","filename":"Titanium.UI.Window.blur-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null},{"name":"close","deprecated":null,"summary":"<p>Fired when the window is closed.</p>\n","description":null,"filename":"Titanium.UI.Window.close-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null},{"name":"open","deprecated":null,"summary":"<p>Fired when the window is opened.</p>\n","description":"<p>The listener for this event must be defined before this window\nis opened.</p>\n","filename":"Titanium.UI.Window.open-event","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null}],"methods":[{"name":"addSharedElement","deprecated":null,"summary":"<p>Adds a common UI element to participate in window transition animation.</p>\n","description":"<p>Available from Android 5.0. Use the current window's UI element that is contextually shared with the other window.</p>\n","filename":"Titanium.UI.Window.addSharedElement-method","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"parameters":[{"name":"view","deprecated":null,"summary":"The shared view from the current window.","description":null,"type":"Titanium.UI.View","optional":false,"filename":"Titanium.UI.Window.addSharedElement-method.view-param"},{"name":"transitionName","deprecated":null,"summary":"The assigned common transition name of UI elements in both windows.","description":null,"type":"String","optional":false,"filename":"Titanium.UI.Window.addSharedElement-method.transitionName-param"}],"returns":{"type":"void"}},{"name":"close","deprecated":null,"summary":"<p>Closes the window.</p>\n","description":"<p>Android only supports the argument type <a href=\"/titanium-vuepress-docs/api/structs/closewindowparams.html\">closeWindowParams</a>.</p>\n","filename":"Titanium.UI.Window.close-method","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"parameters":[{"name":"params","deprecated":null,"summary":"Animation or display properties to use when closing the window.","description":null,"type":["Dictionary<Titanium.UI.Animation>","closeWindowParams"],"optional":true,"filename":"Titanium.UI.Window.close-method.params-param"}],"returns":{"type":"void"}},{"name":"hideNavBar","deprecated":null,"summary":"<p>Hides the navigation bar.</p>\n","description":"<p>If the window is not displayed in a <a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a>, this method has no effect.</p>\n","filename":"Titanium.UI.Window.hideNavBar-method","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"parameters":[{"name":"options","deprecated":null,"summary":"Options dictionary supporting a single `animated` boolean property to determine whether\nthe navigation bar will be animated (default) while being hidden.\n","description":null,"type":"Dictionary","optional":true,"filename":"Titanium.UI.Window.hideNavBar-method.options-param"}],"returns":{"type":"void"}},{"name":"hideTabBar","deprecated":null,"summary":"<p>Hides the tab bar. Must be called before opening the window.</p>\n","description":"<p>To hide the tab bar when opening a window as a child of a tab, call\n<code>hideTabBar</code> or set <code>tabBarHidden</code> to <code>true</code> <strong>before</strong> opening the window.</p>\n<p>If the window is not a child of a tab, this method has no effect.</p>\n","filename":"Titanium.UI.Window.hideTabBar-method","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"parameters":[],"returns":{"type":"void"}},{"name":"hideToolbar","deprecated":null,"summary":"<p>Makes the bottom toolbar invisible.</p>\n","description":"<p>If the window is not displayed in a <a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a>, this method has no effect.\nNote: This method is only intended to work with toolbars that are created using <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#settoolbar\">setToolbar</a>.\nIt will not have any effect on toolbars added manually to the window.</p>\n","filename":"Titanium.UI.Window.hideToolbar-method","platforms":[{"pretty_name":"iPhone","since":"5.4.0","name":"iphone"},{"pretty_name":"iPad","since":"5.4.0","name":"ipad"}],"inherits":null,"examples":[],"parameters":[{"name":"options","deprecated":null,"summary":"Options dictionary supporting a single `animated` boolean property to determine whether\nthe toolbar will be animated (default) while being hidden.\n","description":null,"type":"Dictionary","optional":true,"filename":"Titanium.UI.Window.hideToolbar-method.options-param"}],"returns":{"type":"void"}},{"name":"open","deprecated":null,"summary":"<p>Opens the window.</p>\n","description":null,"filename":"Titanium.UI.Window.open-method","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"parameters":[{"name":"params","deprecated":null,"summary":"Animation or display properties to use when opening the window.","description":null,"type":"openWindowParams","optional":true,"filename":"Titanium.UI.Window.open-method.params-param"}],"returns":{"type":"void"}},{"name":"removeAllSharedElements","deprecated":null,"summary":"<p>Clears all added shared elements.</p>\n","description":"<p>Available from Android 5.0. Use this method to clear all shared elements. This will not remove the views from view hierarchy.</p>\n","filename":"Titanium.UI.Window.removeAllSharedElements-method","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"parameters":[],"returns":{"type":"void"}},{"name":"setToolbar","deprecated":null,"summary":"<p>Sets the array of items to show in the window's toolbar.</p>\n","description":null,"filename":"Titanium.UI.Window.setToolbar-method","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"parameters":[{"name":"items","deprecated":null,"summary":"Array of button objects to show in the window's toolbar.","description":null,"type":"Array<Object>","optional":false,"filename":"Titanium.UI.Window.setToolbar-method.items-param"},{"name":"params","deprecated":null,"summary":"Parameters to control the toolbar appearance.","description":null,"type":"windowToolbarParam","optional":true,"filename":"Titanium.UI.Window.setToolbar-method.params-param"}],"returns":{"type":"void"}},{"name":"showNavBar","deprecated":null,"summary":"<p>Makes the navigation bar visible.</p>\n","description":"<p>If the window is not displayed in a <a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a>, this method has no effect.</p>\n","filename":"Titanium.UI.Window.showNavBar-method","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"parameters":[{"name":"options","deprecated":null,"summary":"Options dictionary supporting a single `animated` boolean property to determine whether\nthe navigation bar will be animated (default) while being shown.\n","description":null,"type":"Dictionary","optional":true,"filename":"Titanium.UI.Window.showNavBar-method.options-param"}],"returns":{"type":"void"}},{"name":"showToolbar","deprecated":null,"summary":"<p>Makes the bottom toolbar visible.</p>\n","description":"<p>If the window is not displayed in a <a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a>, this method has no effect.\nNote: This method is only intended to work with toolbars that are created using <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#settoolbar\">setToolbar</a>.\nIt will not have any effect on toolbars added manually to the window.</p>\n","filename":"Titanium.UI.Window.showToolbar-method","platforms":[{"pretty_name":"iPhone","since":"5.4.0","name":"iphone"},{"pretty_name":"iPad","since":"5.4.0","name":"ipad"}],"inherits":null,"examples":[],"parameters":[{"name":"options","deprecated":null,"summary":"Options dictionary supporting a single `animated` boolean property to determine whether\nthe toolbar will be animated (default) while being shown.\n","description":null,"type":"Dictionary","optional":true,"filename":"Titanium.UI.Window.showToolbar-method.options-param"}],"returns":{"type":"void"}}],"extends":"Titanium.UI.View","properties":[{"name":"navBarHidden","deprecated":null,"summary":"<p>For lightweight windows, this property returns undefined.\nFor heavyweight windows, this property contains a reference to the\nAndroid Activity object associated with this window.</p>\n","description":"<p>An Activity object is not created until the window is opened.\nBefore the window is opened, <code>activity</code> refers to an empty JavaScript object.\nYou can be set properties on this object, but cannot invoke any Activity methods on it.\nOnce the window is opened, the actual Activity object is created,\nusing any properties set on the JavaScript object. At this point, you can call methods\non the activity and access any properties that are set when the activity is created,\nfor example, <a href=\"/titanium-vuepress-docs/api/titanium/android/activity.html#actionbar\">actionBar</a>.</p>\n","filename":"Titanium.UI.Window.activity-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null,"examples":[],"type":"Titanium.Android.Activity","permission":"read-only"},{"name":"activityEnterTransition","deprecated":null,"summary":"<p>The type of transition used when activity is entering.</p>\n","description":"<p>Activity B's enter transition determines how views in B are animated when A starts B.\nApplicable for Android 5.0 and above. This value will be ignored if <code>animated</code> is set to false or\nthere is no shared element between the participating activities.\nSee &quot;Material design activity transitions in Android&quot; in the main description of Titanium.UI.Window\nfor more information.</p>\n","filename":"Titanium.UI.Window.activityEnterTransition-property","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation","default":"If not specified uses platform theme transition."},{"name":"activityExitTransition","deprecated":null,"summary":"<p>The type of transition used when activity is exiting.</p>\n","description":"<p>Activity A's exit transition determines how views in A are animated when A starts B.\nApplicable for Android 5.0 and above. This value will be ignored if <code>animated</code> is set to false or\nthere is no shared element between the participating activities.\nSee &quot;Material design activity transitions in Android&quot; in the main description of Titanium.UI.Window\nfor more information.</p>\n","filename":"Titanium.UI.Window.activityExitTransition-property","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation","default":"If not specified uses platform theme transition."},{"name":"activityReenterTransition","deprecated":null,"summary":"<p>The type of transition used when reentering to a previously started activity.</p>\n","description":"<p>Activity A's reenter transition determines how views in A are animated when B returns to A.\nApplicable for Android 5.0 and above. This value will be ignored if <code>animated</code> is set to false or\nthere is no shared element between the participating activities.\nSee &quot;Material design activity transitions in Android&quot; in the main description of Titanium.UI.Window\nfor more information.</p>\n","filename":"Titanium.UI.Window.activityReenterTransition-property","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation","default":"If not specified uses `activityExitTransition`."},{"name":"activityReturnTransition","deprecated":null,"summary":"<p>The type of transition used when returning from a previously started activity.</p>\n","description":"<p>Activity B's return transition determines how views in B are animated when B returns to A.\nApplicable for Android 5.0 and above. This value will be ignored if <code>animated</code> is set to false or\nthere is no shared element between the participating activities.\nSee &quot;Material design activity transitions in Android&quot; in the main description of Titanium.UI.Window\nfor more information.</p>\n","filename":"Titanium.UI.Window.activityReturnTransition-property","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation","default":"If not specified uses `activityEnterTransition`."},{"name":"activitySharedElementEnterTransition","deprecated":null,"summary":"<p>The type of enter transition used when animating shared elements between two activities.</p>\n","description":"<p>Activity B's shared element enter transition determines how shared elements animate from A to B.\nApplicable for Android 5.0 and above. This value will be ignored if <code>animated</code> is set to false.\nSee &quot;Material design activity transitions in Android&quot; in the main description of Titanium.UI.Window\nfor more information.</p>\n","filename":"Titanium.UI.Window.activitySharedElementEnterTransition-property","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation","default":"Defaults to android platform's [move](https://github.com/android/platform_frameworks_base/blob/lollipop-release/core/res/res/transition/move.xml) transition.\n"},{"name":"activitySharedElementExitTransition","deprecated":null,"summary":"<p>The type of exit transition used when animating shared elements between two activities.</p>\n","description":"<p>Activity A's shared element exit transition animates shared elements before they transition from A to B\nApplicable for Android 5.0 and above. This value will be ignored if <code>animated</code> is set to false.\nSee &quot;Material design activity transitions in Android&quot; in the main description of Titanium.UI.Window\nfor more information.</p>\n","filename":"Titanium.UI.Window.activitySharedElementExitTransition-property","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation","default":"Defaults to android platform's [move](https://github.com/android/platform_frameworks_base/blob/lollipop-release/core/res/res/transition/move.xml) transition.\n"},{"name":"activitySharedElementReenterTransition","deprecated":null,"summary":"<p>The type of reenter transition used when animating shared elements between two activities.</p>\n","description":"<p>Activity A's shared element reenter transition animates shared elements after they have transitioned from B to A.\nApplicable for Android 5.0 and above. This value will be ignored if <code>animated</code> is set to false.\nSee &quot;Material design activity transitions in Android&quot; in the main description of Titanium.UI.Window\nfor more information.</p>\n","filename":"Titanium.UI.Window.activitySharedElementReenterTransition-property","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation","default":"Defaults to android platform's [move](https://github.com/android/platform_frameworks_base/blob/lollipop-release/core/res/res/transition/move.xml) transition.\n"},{"name":"activitySharedElementReturnTransition","deprecated":null,"summary":"<p>The type of return transition used when animating shared elements between two activities.</p>\n","description":"<p>Activity B's shared element return transition determines how shared elements animate from B to A.\nApplicable for Android 5.0 and above. This value will be ignored if <code>animated</code> is set to false.\nSee &quot;Material design activity transitions in Android&quot; in the main description of Titanium.UI.Window\nfor more information.</p>\n","filename":"Titanium.UI.Window.activitySharedElementReturnTransition-property","platforms":[{"pretty_name":"Android","since":"5.2.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation","default":"Defaults to android platform's [move](https://github.com/android/platform_frameworks_base/blob/lollipop-release/core/res/res/transition/move.xml) transition.\n"},{"name":"autoAdjustScrollViewInsets","deprecated":null,"summary":"<p>Specifies whether or not the view controller should automatically adjust its scroll view insets.</p>\n","description":"<p>When the value is true, it allows the view controller to adjust its scroll view insets in response\nto the screen areas consumed by the status bar, navigation bar, toolbar and tab bar.</p>\n<p>The default behavior assumes that this is false. Must be specified before <strong>opening</strong> the window.</p>\n","filename":"Titanium.UI.Window.autoAdjustScrollViewInsets-property","platforms":[{"pretty_name":"iPhone","since":"3.1.3","name":"iphone"},{"pretty_name":"iPad","since":"3.1.3","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"backButtonTitle","deprecated":null,"summary":"<p>Title for the back button. This is only valid when the window is a child of a tab.</p>\n","description":null,"filename":"Titanium.UI.Window.backButtonTitle-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"String"},{"name":"backButtonTitleImage","deprecated":null,"summary":"<p>The image to show as the back button. This is only valid when the window is a child of a tab.</p>\n","description":null,"filename":"Titanium.UI.Window.backButtonTitleImage-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":["String","Titanium.Blob"]},{"name":"backgroundColor","deprecated":null,"summary":"<p>Background color of the window, as a color name or hex triplet.</p>\n","description":"<p>On Android, to specify a semi-transparent background, set the alpha value using the\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#opacity\">opacity</a> property before opening the window.</p>\n<p>For information about color values, see the &quot;Colors&quot; section of <a href=\"/titanium-vuepress-docs/api/titanium/ui.html\">Titanium.UI</a>.</p>\n","filename":"Titanium.UI.Window.backgroundColor-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"String","default":"Transparent"},{"name":"barColor","deprecated":null,"summary":"<p>Background color for the nav bar, as a color name or hex triplet.</p>\n","description":"<p>For information about color values, see the &quot;Colors&quot; section of <a href=\"/titanium-vuepress-docs/api/titanium/ui.html\">Titanium.UI</a>.</p>\n","filename":"Titanium.UI.Window.barColor-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"String"},{"name":"barImage","deprecated":null,"summary":"<p>Background image for the nav bar, specified as a URL to a local image.</p>\n","description":"<p>The behavior of this API on iOS has changed from version 3.2.0. Previous versions\nof the SDK created a custom image view and inserted it as a child of the navigation bar.\nThe titanium sdk now uses the native call to set the background image of the navigation bar.\nYou can set it to a 1px transparent png to use a combination of <code>barColor</code> and <code>hideShadow:true</code>.</p>\n","filename":"Titanium.UI.Window.barImage-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"String"},{"name":"bottom","deprecated":null,"summary":"<p>Window's bottom position, in platform-specific units.</p>\n","description":"<p>On Android, this property only works with lightweight windows.\nSee &quot;Android Heavyweight and Lightweight Windows&quot; in the main description\nof Titanium.UI.Window for more information.</p>\n","filename":"Titanium.UI.Window.bottom-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":["Number","String"]},{"name":"exitOnClose","deprecated":null,"summary":"<p>Boolean value indicating if the application should exit when the Android\nBack button is pressed while the window is being shown or when the window\nis closed programmatically.</p>\n","description":"<p>Starting in 3.4.2 you can set this property at any time. In earlier releases you can only set this as a createWindow({...}) option.</p>\n","filename":"Titanium.UI.Window.exitOnClose-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Boolean","default":"true if this is the first window launched else false; prior to Release 3.3.0, the\ndefault was always false.\n"},{"name":"extendEdges","deprecated":null,"summary":"<p>An array of supported values specified using the EXTEND_EDGE constants in <a href=\"/titanium-vuepress-docs/api/titanium/ui.html\">Titanium.UI</a>.</p>\n","description":"<p>This is only valid for windows hosted by navigation controllers or tab bar controllers. This property is used to\ndetermine the layout of the window within its parent view controller. For example if the window is specified to extend its top edge\nand it is hosted in a navigation controller, then the top edge of the window is extended underneath the navigation bar so that part\nof the window is obscured. If the navigation bar is opaque (translucent property on window is false), then the top edge of the window\nwill only extend if <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#includeopaquebars\">includeOpaqueBars</a> is set to true.</p>\n<p>The default behavior is to assume that no edges are to be extended. Must be specified before <strong>opening</strong> the window.</p>\n","filename":"Titanium.UI.Window.extendEdges-property","platforms":[{"pretty_name":"iPhone","since":"3.1.3","name":"iphone"},{"pretty_name":"iPad","since":"3.1.3","name":"ipad"}],"inherits":null,"examples":[],"type":"Array<Number>"},{"name":"extendSafeArea","deprecated":null,"summary":"<p>Specifies whether the screen insets/notches are allowed to overlap the window's content or not.</p>\n","description":"<p>If set <code>true</code>, then the contents of the window will be extended to fill the whole screen and allow the\nsystem's UI elements (such as a translucent status-bar) and physical obstructions (such as the iPhone X\nrounded corners and top sensor housing) to overlap the window's content. In this case, it is the app\ndeveloper's responsibility to position views so that they're unobstructed. On Android, you can use the\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#safeareapadding\">safeAreaPadding</a> property after the window has been opened to\nlayout your content within the insets.</p>\n<p>If set <code>false</code>, then the window's content will be laid out within the safe-area and its child views will be\nunobstructed. For example, you will not need to position a view below the top status-bar.</p>\n<p>Read more about the safe-area layout-guide in the <a href=\"https://developer.apple.com/ios/human-interface-guidelines/overview/iphone-x/\">Human Interface Guidelines</a>.</p>\n","filename":"Titanium.UI.Window.extendSafeArea-property","platforms":[{"pretty_name":"Android","since":"7.5.0","name":"android"},{"pretty_name":"iPhone","since":"6.3.0","name":"iphone"},{"pretty_name":"iPad","since":"6.3.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean","availability":"creation","default":{"android":false,"ios":true}},{"name":"flagSecure","deprecated":null,"summary":"<p>Treat the content of the window as secure, preventing it from appearing in screenshots or from being viewed on non-secure displays.</p>\n","description":"<p>When the value is true, preventing it from appearing in screenshots or from being viewed on non-secure displays.</p>\n","filename":"Titanium.UI.Window.flagSecure-property","platforms":[{"pretty_name":"Android","since":"3.3.0","name":"android"}],"inherits":null,"examples":[],"type":"Boolean","availability":"creation"},{"name":"fullscreen","deprecated":null,"summary":"<p>Boolean value indicating if the window is fullscreen.</p>\n","description":"<p>A fullscreen window occupies all of the screen space, hiding the status bar. Must be specified\nat creation time or in the <code>options</code> dictionary passed to the <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#open\">open</a> method.</p>\n<p>On iOS the behavior of this property has changed. Starting from 3.1.3, if this property is undefined\nthen the property is set to the value for UIStatusBarHidden defined in tiapp.xml.\nIf that is not defined it is treated as <strong>explicit false</strong>. On earlier versions, opening a window with this property\nundefined would not effect the status bar appearance.</p>\n<p>On Android, setting this property forces the creation of a heavyweight window before Titanium 3.2.0.\nSee &quot;Android Heavyweight and Lightweight Windows&quot; in the main description of this class for more\ninformation.</p>\n","filename":"Titanium.UI.Window.fullscreen-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"hidesBackButton","deprecated":null,"summary":"<p>Set this to true to hide the back button of navigation bar.</p>\n","description":"<p>When this property is set to <code>true</code>, the navigation window hides its back button.</p>\n","filename":"Titanium.UI.Window.hidesBackButton-property","platforms":[{"pretty_name":"iPhone","since":"7.5.0","name":"iphone"},{"pretty_name":"iPad","since":"7.5.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"hidesBarsOnSwipe","deprecated":null,"summary":"<p>Set this to true to hide the navigation bar on swipe.</p>\n","description":"<p>When this property is set to true, an upward swipe hides the navigation bar and toolbar.\nA downward swipe shows both bars again.  If the toolbar does not have any items, it remains\nvisible even after a swipe.</p>\n","filename":"Titanium.UI.Window.hidesBarsOnSwipe-property","platforms":[{"pretty_name":"iPhone","since":"6.0.0","name":"iphone"},{"pretty_name":"iPad","since":"6.0.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean","availability":"creation"},{"name":"hidesBarsOnTap","deprecated":null,"summary":"<p>Set this to true to hide the navigation bar on tap.</p>\n","description":"<p>When the value of this property is true, the navigation controller toggles the hiding and\nshowing of its navigation bar and toolbar in response to an otherwise unhandled tap\nin the content area.</p>\n","filename":"Titanium.UI.Window.hidesBarsOnTap-property","platforms":[{"pretty_name":"iPhone","since":"6.0.0","name":"iphone"},{"pretty_name":"iPad","since":"6.0.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean","availability":"creation"},{"name":"hidesBarsWhenKeyboardAppears","deprecated":null,"summary":"<p>Set this to true to hide the navigation bar when the keyboard appears.</p>\n","description":"<p>When this property is set to true, the appearance of the keyboard causes the\nnavigation controller to hide its navigation bar and toolbar.</p>\n","filename":"Titanium.UI.Window.hidesBarsWhenKeyboardAppears-property","platforms":[{"pretty_name":"iPhone","since":"6.0.0","name":"iphone"},{"pretty_name":"iPad","since":"6.0.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean","availability":"creation"},{"name":"hideShadow","deprecated":null,"summary":"<p>Set this to true to hide the shadow image of the navigation bar.</p>\n","description":"<p>This property is only honored if a valid value is specified for the <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#barimage\">barImage</a> property.</p>\n","filename":"Titanium.UI.Window.hideShadow-property","platforms":[{"pretty_name":"iPhone","since":"3.2.0","name":"iphone"},{"pretty_name":"iPad","since":"3.2.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"homeIndicatorAutoHidden","deprecated":null,"summary":"<p>Boolean value indicating whether the system is allowed to hide the visual indicator for returning to the Home screen.</p>\n","description":"<p>Set this value true, if you want the system to determine when to hide the indicator. Set this value false,\nif you want the indicator shown at all times. The system takes your preference into account, but setting\ntrue is no guarantee that the indicator will be hidden.</p>\n","filename":"Titanium.UI.Window.homeIndicatorAutoHidden-property","platforms":[{"pretty_name":"iPhone","since":"7.3.0","name":"iphone"},{"pretty_name":"iPad","since":"7.3.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"includeOpaqueBars","deprecated":null,"summary":"<p>Specifies if the edges should extend beyond opaque bars (navigation bar, tab bar, toolbar).</p>\n","description":"<p>By default edges are only extended to include translucent bars. However if this is set to true, then edges are extended beyond\nopaque bars as well.</p>\n<p>The default behavior assumes that this is false. Must be specified before <strong>opening</strong> the window.</p>\n","filename":"Titanium.UI.Window.includeOpaqueBars-property","platforms":[{"pretty_name":"iPhone","since":"3.1.3","name":"iphone"},{"pretty_name":"iPad","since":"3.1.3","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"largeTitleDisplayMode","deprecated":null,"summary":"<p>The mode to use when displaying the title of the navigation bar.</p>\n","description":"<p>Automatically use the large out-of-line title based on the state of the\nprevious item in the navigation bar. An item with\n<code>largeTitleDisplayMode = Ti.UI.iOS.LARGE_TITLE_DISPLAY_MODE_AUTOMATIC</code>\nwill show or hide the large title based on the request of the previous\nnavigation item. If the first item pushed is set to Automatic, then it\nwill show the large title if the navigation bar has <code>largeTitleEnabled = true</code>.</p>\n","filename":"Titanium.UI.Window.largeTitleDisplayMode-property","platforms":[{"pretty_name":"iPhone","since":"6.3.0","name":"iphone"},{"pretty_name":"iPad","since":"6.3.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Number","default":"Titanium.UI.iOS.LARGE_TITLE_DISPLAY_MODE_AUTOMATIC"},{"name":"largeTitleEnabled","deprecated":null,"summary":"<p>A Boolean value indicating whether the title should be displayed in a large format.</p>\n","description":"<p>When set to <code>true</code>, the navigation bar will use a larger out-of-line\ntitle view when requested by the current navigation item. To specify when\nthe large out-of-line title view appears, see <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#largetitledisplaymode\">largeTitleDisplayMode</a>.</p>\n","filename":"Titanium.UI.Window.largeTitleEnabled-property","platforms":[{"pretty_name":"iPhone","since":"6.3.0","name":"iphone"},{"pretty_name":"iPad","since":"6.3.0","name":"ipad"}],"inherits":null,"examples":[],"type":"String"},{"name":"left","deprecated":null,"summary":"<p>Window's left position, in platform-specific units.</p>\n","description":"<p>On Android, this property only works with lightweight windows.\nSee &quot;Android Heavyweight and Lightweight Windows&quot; in the main description\nof Titanium.UI.Window for more information.</p>\n","filename":"Titanium.UI.Window.left-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":["Number","String"]},{"name":"leftNavButton","deprecated":null,"summary":"<p>View to show in the left nav bar area.</p>\n","description":"<p>In an Alloy application you can specify this property with a <code>&lt;LeftNavButton&gt;</code> element inside the\n<code>&lt;Window&gt;</code> element, for example:</p>\n<pre><code>&lt;Alloy&gt;\n    &lt;TabGroup&gt;\n        &lt;Tab&gt;\n            &lt;Window class=&quot;container&quot;&gt;\n                &lt;LeftNavButton platform=ios&gt;\n                    &lt;Button title=&quot;Back&quot; onClick=&quot;closeWindow&quot; /&gt;\n                &lt;/LeftNavButton&gt;\n            &lt;/Window&gt;\n        &lt;/Tab&gt;\n    &lt;/TabGroup&gt;\n&lt;/Alloy&gt;\n</code></pre>\n","filename":"Titanium.UI.Window.leftNavButton-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Titanium.UI.View"},{"name":"leftNavButtons","deprecated":null,"summary":"<p>An Array of views to show in the left nav bar area.</p>\n","description":null,"filename":"Titanium.UI.Window.leftNavButtons-property","platforms":[{"pretty_name":"iPhone","since":"3.3.0","name":"iphone"},{"pretty_name":"iPad","since":"3.3.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Array<Titanium.UI.View>"},{"name":"modal","deprecated":null,"summary":"<p>Indicates to open a modal window or not.</p>\n","description":"<p>Set to <code>true</code> to create a modal window.</p>\n<p>Must be specified at creation time or in the dictionary passed to the\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#open\">open</a> method.</p>\n<p>In the user interface, a modal window is a window that blocks the main application UI until\nthe modal window is dismissed.  A modal window requires the user to interact with it to\nresume the normal flow of the application.</p>\n<p>See the &quot;Modal Windows&quot; section for platform-specific information.</p>\n","filename":"Titanium.UI.Window.modal-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"navBarHidden","deprecated":null,"summary":"<p>Hides the navigation bar (<code>true</code>) or shows the navigation bar (<code>false</code>).</p>\n","description":"<h4 id=\"ios-platform-notes\"><a class=\"header-anchor\" href=\"#ios-platform-notes\" aria-hidden=\"true\">#</a> iOS Platform Notes</h4>\n<p>Since Titanium SDK 6.0.0, you can use this property to hide and show the property as well.</p>\n<p>Using this property, the navigation bar will be hidden or shown animated by default. Please note that\nthis property will only take effect if the window is used inside a <a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a>\nand will be ignored otherwise. If you want to hide or show the navigation without an animation, use t\nhe methods <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#shownavbar\">showNavBar</a> and <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#hidenavbar\">hideNavBar</a> with the second parameter\nto specify the animation:</p>\n<pre><code>// &quot;myWindow&quot; is a Ti.UI.Window inside a Ti.UI.NavigationWindow\nmyWindow.hideNavBar(true, {animated: false});\n</code></pre>\n<h4 id=\"android-platform-notes\"><a class=\"header-anchor\" href=\"#android-platform-notes\" aria-hidden=\"true\">#</a> Android Platform Notes</h4>\n<p>Since Release 3.3.0, due to changes to support the appcompat library, this property has no\neffect. By default, the action bar is always displayed.  To hide the action bar, see the\n<a href=\"https://docs.appcelerator.com/platform/latest/#!/guide/Android_Action_Bar\">Android Action Bar guide</a>.</p>\n","filename":"Titanium.UI.Window.navBarHidden-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"navigationWindow","deprecated":null,"summary":"<p>The <a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a> instance hosting this window.</p>\n","description":"<p>Returns the navigation window that hosts this window. Returns <code>null</code> if the window is not\nhosted by a navigation window.</p>\n","filename":"Titanium.UI.Window.navigationWindow-property","platforms":[{"pretty_name":"iPhone","since":"7.3.0","name":"iphone"},{"pretty_name":"iPad","since":"7.3.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Titanium.UI.NavigationWindow","permission":"read-only"},{"name":"navTintColor","deprecated":null,"summary":"<p>The tintColor to apply to the navigation bar.</p>\n","description":"<p>This property is a direct correspondant of the tintColor property of NavigationBar on iOS.</p>\n","filename":"Titanium.UI.Window.navTintColor-property","platforms":[{"pretty_name":"iPhone","since":"3.1.3","name":"iphone"},{"pretty_name":"iPad","since":"3.1.3","name":"ipad"}],"inherits":null,"examples":[],"type":["String"]},{"name":"onBack","deprecated":null,"summary":"<p>Callback function that overrides the default behavior when the user presses the <strong>Back</strong>\nbutton.</p>\n","description":"<p>This was separated from the <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#androidback\">androidback</a> event. You need to define this\ncallback if you explicitly want to override the back button behavior.</p>\n","filename":"Titanium.UI.Window.onBack-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null,"examples":[],"type":"Callback<Object>"},{"name":"opacity","deprecated":null,"summary":"<p>The opacity from 0.0-1.0.</p>\n","description":"<p>iOS notes: For modal windows that cover the previous window, the previous window is\nremoved from the render stack after the modal window finishes opening. If the\nmodal window is semi-transparent, the underlying window will be visible during the\ntransition animation, but disappear as soon as the animation is completed. (In general\nall modal windows cover the previous window, except for iPad modal windows using the\nPage sheet or Form sheet style.)</p>\n<p>Android notes: If you set any of <code>windowSoftInputMode</code>, <code>fullscreen</code>, or <code>navBarHidden</code>,\n<em>and</em> you wish to use the <code>opacity</code> property at any time during the window's lifetime,\nbe sure to set an <code>opacity</code> value <strong>before</strong> opening the window.  You can later change that\nvalue -- and you can set it to 1 for full opacity if you wish -- but the important thing\nis that you set it to a value before opening the window if you will want to set it at\nany time during the window's lifetime.</p>\n<p>The technical reason for this is that if the opacity property is present (i.e., has\nbeen set to something) and a new Android Activity is created for the window,\nthen a translucent theme will be used for the Activity.  Window transparency (opacity\nvalues below 1) will only work in Android if the Activity's theme is translucent, and\nTitanium only uses a translucent theme for an Activity if you set an opacity property\nbefore opening the window.  Additionally, do not use <code>opacity</code> and <code>fullscreen: true</code>\ntogether, because translucent themes in Android cannot hide the status bar.  Finally,\nif you do set the <code>opacity</code> property, be sure to also set a <code>backgroundImage</code> or\n<code>backgroundColor</code> property as well, unless you want the window to be completely\ntransparent.</p>\n","filename":"Titanium.UI.Window.opacity-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"Number"},{"name":"orientation","deprecated":null,"summary":"<p>Current orientation of the window.</p>\n","description":"<p>To determine the current orientation of the <em>device</em>, see\n<a href=\"/titanium-vuepress-docs/api/titanium/gesture.html#orientation\">orientation</a>, instead.</p>\n<p>See\nthe discussion of the <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#orientationmodes\">orientationModes</a>\nproperty for more information on how the screen orientation is determined.</p>\n","filename":"Titanium.UI.Window.orientation-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"3.0.0","name":"iphone"},{"pretty_name":"iPad","since":"3.0.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Number","permission":"read-only"},{"name":"orientationModes","deprecated":null,"summary":"<p>Array of supported orientation modes, specified using the orientation\nconstants defined in <a href=\"/titanium-vuepress-docs/api/titanium/ui.html\">Titanium.UI</a>.</p>\n","description":"<p><strong>Note:</strong> Using the <code>orientationModes</code> property to force the orientation of non-modal\nwindows is considered a bad practice and will not be supported, including forcing the\norientation of windows inside a NavigationWindow or TabGroup.</p>\n<p>To restrict this window to a certain set of orientations, specify one or more\nof the orientation constants <a href=\"/titanium-vuepress-docs/api/titanium/ui.html#landscape_left\">LANDSCAPE_LEFT</a>,\n<a href=\"/titanium-vuepress-docs/api/titanium/ui.html#landscape_right\">LANDSCAPE_RIGHT</a>, <a href=\"/titanium-vuepress-docs/api/titanium/ui.html#portrait\">PORTRAIT</a>,\n<a href=\"/titanium-vuepress-docs/api/titanium/ui.html#upside_portrait\">UPSIDE_PORTRAIT</a>.</p>\n<p><code>orientationModes</code> must be set <strong>before</strong> opening the window.</p>\n<p>To determine the current orientation of the <em>window</em>, see\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#orientation\">orientation</a>.\nTo determine the current orientation of the <em>device</em>, see\n<a href=\"/titanium-vuepress-docs/api/titanium/gesture.html#orientation\">orientation</a>.\nTo be notified when the device's current orientation changes, add a listener for the\n<a href=\"/titanium-vuepress-docs/api/titanium/gesture.html#orientationchange\">orientationchange</a> event.</p>\n<h4 id=\"android-orientation-modes\"><a class=\"header-anchor\" href=\"#android-orientation-modes\" aria-hidden=\"true\">#</a> Android Orientation Modes</h4>\n<p>On Android, <code>orientationModes</code> only takes effect when specified on a heavyweight\nwindow.</p>\n<p>On Android, orientation behavior is dependent on the Android SDK level\nof the device itself. Devices running Android 2.3 and above support &quot;sensor portait\nmode&quot; and &quot;sensor landscape mode,&quot; in these modes, the device is locked into\neither a portrait or landscape orientation, but can switch between the normal and reverse\norientations (for example, between PORTRAIT and UPSIDE_PORTRAIT).</p>\n<p>In addition, the definition of portrait or\nlandscape mode can vary based on the physical design of the device. For example,\non some devices <a href=\"/titanium-vuepress-docs/api/titanium/ui.html#landscape_left\">LANDSCAPE_LEFT</a> represents the top of the device being at\nthe 270 degree position but other devices may (based on camera position for example)\ntreat this position as <a href=\"/titanium-vuepress-docs/api/titanium/ui.html#landscape_right\">LANDSCAPE_RIGHT</a>. In general, applications for\nAndroid that need to be aware of orientation should try and limit their orientation\nlogic to handling either portrait or landscape rather than worrying about the reverse\nmodes. This approach will allow the orientation modes to adopt a more natural feel for\nthe specific device.</p>\n<p>The following list breaks down the orientation behavior on Android based on the contents\nof the <code>orientationModes</code> array:</p>\n<ol>\n<li>\n<p>Empty array. Enables orientation to be fully controlled by the device sensor.</p>\n</li>\n<li>\n<p>Array includes one or both portrait modes <strong>and</strong> one or both landscape modes.\nEnables full sensor control (identical to an empty array).</p>\n</li>\n<li>\n<p>Array contains PORTRAIT <strong>and</strong> UPSIDE_PORTRAIT. On Android 2.3 and above,\nenables sensor portrait mode. This means the screen will shift between\nboth portrait modes according to the sensor inside the device.</p>\n<p>On Android versions below 2.3, locks screen orientation in normal portrait mode.</p>\n</li>\n<li>\n<p>Array contains LANDSCAPE_LEFT <strong>and</strong> LANDSCAPE_RIGHT. On Android 2.3 and above,\nenables sensor landscape mode. This means the screen will shift between both\nlandscape modes according to the sensor inside the device.</p>\n<p>On Android versions below 2.3, locks screen orientation in normal landscape mode.</p>\n</li>\n<li>\n<p>Array contains <strong>only</strong> <a href=\"/titanium-vuepress-docs/api/titanium/ui.html#portrait\">PORTRAIT</a>. Locks screen orientation\nto normal portrait mode.</p>\n</li>\n<li>\n<p>Array contains <strong>only</strong> <a href=\"/titanium-vuepress-docs/api/titanium/ui.html#landscape_left\">LANDSCAPE_LEFT</a>. Locks screen\norientation to normal landscape mode.</p>\n</li>\n<li>\n<p>Array contains <strong>only</strong> <a href=\"/titanium-vuepress-docs/api/titanium/ui.html#upside_portrait\">UPSIDE_PORTRAIT</a>. On\nAndroid 2.3 and above, locks screen in reverse portrait mode.</p>\n<p>On Android versions below 2.3, results are undefined.</p>\n</li>\n<li>\n<p>Array contains <strong>only</strong>  <a href=\"/titanium-vuepress-docs/api/titanium/ui.html#landscape_right\">LANDSCAPE_RIGHT</a>. On\nAndroid 2.3 and above, locks screen in reverse landscape mode.</p>\n<p>On Android versions below 2.3, results are undefined.</p>\n</li>\n</ol>\n","filename":"Titanium.UI.Window.orientationModes-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Array<Number>","default":"empty array"},{"name":"right","deprecated":null,"summary":"<p>Window's right position, in platform-specific units.</p>\n","description":"<p>On Android, this property only works with lightweight windows.\nSee &quot;Android Heavyweight and Lightweight Windows&quot; in the main description\nof Titanium.UI.Window for more information.</p>\n","filename":"Titanium.UI.Window.right-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":["Number","String"]},{"name":"rightNavButton","deprecated":null,"summary":"<p>View to show in the right nav bar area.</p>\n","description":"<p>In an Alloy application you can specify this property with a <code>&lt;RightNavButton&gt;</code> element in the\n<code>&lt;Window&gt;</code> element, for example:</p>\n<pre><code>&lt;Alloy&gt;\n    &lt;TabGroup&gt;\n        &lt;Tab&gt;\n            &lt;Window class=&quot;container&quot;&gt;\n                &lt;RightNavButton platform=ios&gt;\n                    &lt;Button title=&quot;Back&quot; onClick=&quot;closeWindow&quot; /&gt;\n                &lt;/RightNavButton&gt;\n            &lt;/Window&gt;\n        &lt;/Tab&gt;\n    &lt;/TabGroup&gt;\n&lt;/Alloy&gt;\n</code></pre>\n","filename":"Titanium.UI.Window.rightNavButton-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Titanium.UI.View"},{"name":"rightNavButtons","deprecated":null,"summary":"<p>An Array of views to show in the right nav bar area.</p>\n","description":null,"filename":"Titanium.UI.Window.rightNavButtons-property","platforms":[{"pretty_name":"iPhone","since":"3.3.0","name":"iphone"},{"pretty_name":"iPad","since":"3.3.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Array<Titanium.UI.View>"},{"name":"safeAreaPadding","deprecated":null,"summary":"<p>The padding needed to safely display content without it being overlapped by the screen insets and notches.</p>\n","description":"<p>When setting <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#extendsafearea\">extendSafeArea</a> to <code>true</code>, the system's insets\nsuch as a translucent status bar, translucent navigation bar, and/or camera notches will be allowed to\noverlay on top of the window's content. In this case, it is the app developer's responsibility to\nprevent these insets from overlapping key content such as buttons. This property provides the amount of\nspace needed to be added to the left, top, right, and bottom edges of the window root view to do this.</p>\n<p>This property won't return values greater than zero until the window has been opened. It is recommended\nthat you read this property via a <a href=\"/titanium-vuepress-docs/api/titanium/ui/view.html#postlayout\">postlayout</a> event listener since the padding values can\nchange when when the app's orientation changes or when showing/hiding the action bar.</p>\n<p>If the <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#extendsafearea\">extendSafeArea</a> property is set <code>false</code>, then the\nreturned padding will be all zeros since the root content will be positioned between all insets.</p>\n<p>Below is an example on how to set up a safe-area view container using this property.</p>\n<pre><code>// Set up a window with a translucent top status bar and translucent nav bar.\n// This will only work on Android 4.4 and newer OS versions.\nvar win = Ti.UI.createWindow({\n    extendSafeArea: true,\n    theme: 'Theme.AppCompat.NoTitleBar',\n    windowFlags: Ti.UI.Android.FLAG_TRANSLUCENT_NAVIGATION | Ti.UI.Android.FLAG_TRANSLUCENT_STATUS\n});\n\n// Set up a safe-area view to be layed out between the system insets.\n// You should use this as a container for child views.\nvar safeAreaView = Ti.UI.createView({\n    backgroundColor: 'green'\n});\nwin.add(safeAreaView);\nwin.addEventListener('postlayout', function() {\n    // Update the safe-area view's dimensions after every 'postlayout' event.\n    safeAreaView.applyProperties(win.safeAreaPadding);\n});\n\n// Open the window.\nwin.open();\n</code></pre>\n","filename":"Titanium.UI.Window.safeAreaPadding-property","platforms":[{"pretty_name":"Android","since":"7.5.0","name":"android"}],"inherits":null,"examples":[],"type":"Dimension","permission":"read-only"},{"name":"shadowImage","deprecated":null,"summary":"<p>Shadow image for the navigation bar, specified as a URL to a local image..</p>\n","description":"<p>This property is only honored if a valid value is specified for the <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#barimage\">barImage</a> property.</p>\n","filename":"Titanium.UI.Window.shadowImage-property","platforms":[{"pretty_name":"iPhone","since":"3.2.0","name":"iphone"},{"pretty_name":"iPad","since":"3.2.0","name":"ipad"}],"inherits":null,"examples":[],"type":"String"},{"name":"splitActionBar","deprecated":{"notes":"<p>Deprecated in AppCompat theme. The same behaviour can be achived by using Toolbar.</p>\n","since":"6.2.0"},"summary":"<p>Boolean value to enable split action bar.</p>\n","description":"<p><code>splitActionBar</code> must be set <strong>before</strong> opening the window.\nThis property indicates if the window should use a <a href=\"https://developer.android.com/guide/topics/ui/actionbar.html#SplitBar\">split action bar</a></p>\n","filename":"Titanium.UI.Window.splitActionBar-property","platforms":[{"pretty_name":"Android","since":"3.6.0","name":"android"}],"inherits":null,"examples":[],"type":"Boolean","availability":"creation"},{"name":"statusBarStyle","deprecated":null,"summary":"<p>The status bar style associated with this window.</p>\n","description":"<p>Sets the status bar style when this window has focus. This is now the recommended way to control the\nstatus bar style on the application.</p>\n<p>If this value is undefined, the value is set to UIStatusBarStyle defined in tiapp.xml.\nIf that is not defined it defaults to <a href=\"/titanium-vuepress-docs/api/titanium/ui/ios/statusbar.html#default\">DEFAULT</a>.</p>\n","filename":"Titanium.UI.Window.statusBarStyle-property","platforms":[{"pretty_name":"iPhone","since":"3.1.3","name":"iphone"},{"pretty_name":"iPad","since":"3.1.3","name":"ipad"}],"inherits":null,"examples":[],"type":["Number"]},{"name":"sustainedPerformanceMode","deprecated":null,"summary":"<p>Maintain a sustainable level of performance.</p>\n","description":"<p>Performance can fluctuate dramatically for long-running apps, because the system throttles\nsystem-on-chip engines as device components reach their temperature limits. This fluctuation\npresents a moving target for app developers creating high-performance, long-running apps.</p>\n<p>Setting this feature to true will set sustained performance mode for the corresponding window.\nIf property is undefined then it defaults to false.</p>\n<p>Note: This feature is only available on supported devices. The functionality is experimental and\nsubject to change in future releases. See <a href=\"https://source.android.com/devices/tech/power/performance\">Android docs</a> for further info.</p>\n","filename":"Titanium.UI.Window.sustainedPerformanceMode-property","platforms":[{"pretty_name":"Android","since":"7.0.0","name":"android"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"swipeToClose","deprecated":null,"summary":"<p>Boolean value indicating if the user should be able to close a window using a swipe gesture.</p>\n","description":"<p>If <code>false</code> the user will not be able to swipe from the left edge of the window to close it.\nNote: This property is only used for a window being embedded in a <a href=\"/titanium-vuepress-docs/api/titanium/ui/tab.html\">Titanium.UI.Tab</a> or\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a>. It is enabled by default.</p>\n","filename":"Titanium.UI.Window.swipeToClose-property","platforms":[{"pretty_name":"iPhone","since":"5.2.0","name":"iphone"},{"pretty_name":"iPad","since":"5.2.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean","default":true},{"name":"tabBarHidden","deprecated":null,"summary":"<p>Boolean value indicating if the tab bar should be hidden.</p>\n","description":"<p><code>tabBarHidden</code> must be set <strong>before</strong> opening the window.</p>\n<p>This property is only valid when the window is the child of a tab.</p>\n","filename":"Titanium.UI.Window.tabBarHidden-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean"},{"name":"theme","deprecated":null,"summary":"<p>Name of the theme to apply to the window.</p>\n","description":"<p>Set the theme of the window. It can be either a <a href=\"https://docs.appcelerator.com/platform/latest/#!/guide/Android_Themes-section-34636181_AndroidThemes-Built-inThemes\">built-in theme</a>\nor a <a href=\"https://docs.appcelerator.com/platform/latest/#!/guide/Android_Themes-section-34636181_AndroidThemes-CustomThemes\">custom theme</a>.</p>\n","filename":"Titanium.UI.Window.theme-property","platforms":[{"pretty_name":"Android","since":"3.4.0","name":"android"}],"inherits":null,"examples":[],"type":"String","availability":"creation"},{"name":"title","deprecated":null,"summary":"<p>Title of the window.</p>\n","description":null,"filename":"Titanium.UI.Window.title-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"String"},{"name":"titleAttributes","deprecated":null,"summary":"<p>Title text attributes of the window.</p>\n","description":"<p>Use this property to specify the color, font and shadow attributes of the title.</p>\n","filename":"Titanium.UI.Window.titleAttributes-property","platforms":[{"pretty_name":"iPhone","since":"3.2.0","name":"iphone"},{"pretty_name":"iPad","since":"3.2.0","name":"ipad"}],"inherits":null,"examples":[],"type":"titleAttributesParams"},{"name":"titleControl","deprecated":null,"summary":"<p>View to show in the title area of the nav bar.</p>\n","description":"<p>In an Alloy application you can specify this property using a <code>&lt;TitleControl&gt;</code> element inside\n<code>&lt;Window&gt;</code>, for example:</p>\n<pre><code>&lt;Alloy&gt;\n    &lt;Window&gt;\n        &lt;RightNavButton&gt;\n            &lt;Button title=&quot;Back&quot; /&gt;\n        &lt;/RightNavButton&gt;\n        &lt;LeftNavButton&gt;\n            &lt;Button title=&quot;Back&quot; /&gt;\n        &lt;/LeftNavButton&gt;\n        &lt;TitleControl&gt;\n            &lt;View backgroundColor=&quot;blue&quot; height=&quot;100%&quot; width=&quot;100%&quot;&gt;&lt;/View&gt;\n        &lt;/TitleControl&gt;\n    &lt;/Window&gt;\n&lt;/Alloy&gt;\n</code></pre>\n","filename":"Titanium.UI.Window.titleControl-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Titanium.UI.View"},{"name":"titleid","deprecated":null,"summary":"<p>Key identifying a string from the locale file to use for the window title.</p>\n","description":"<p>Only one of <code>title</code> or <code>titleid</code> should be specified.</p>\n","filename":"Titanium.UI.Window.titleid-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":"String"},{"name":"titleImage","deprecated":null,"summary":"<p>Image to show in the title area of the nav bar, specified as a local file path or URL.</p>\n","description":null,"filename":"Titanium.UI.Window.titleImage-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"String"},{"name":"titlePrompt","deprecated":null,"summary":"<p>Title prompt for the window.</p>\n","description":null,"filename":"Titanium.UI.Window.titlePrompt-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"String"},{"name":"titlepromptid","deprecated":null,"summary":"<p>Key identifying a string from the locale file to use for the window title prompt.</p>\n","description":"<p>Only one of <code>titlePrompt</code> or <code>titlepromptid</code> should be specified.</p>\n","filename":"Titanium.UI.Window.titlepromptid-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"String"},{"name":"toolbar","deprecated":null,"summary":"<p>Array of button objects to show in the window's toolbar.</p>\n","description":"<p>The toolbar is only shown when the window is inside a <a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a>.\nTo display a toolbar when a window is not inside a NavigationWindow, add an instance of a\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/ios/toolbar.html\">Titanium.UI.iOS.Toolbar</a> to the window.</p>\n<p>To customize the toolbar, use the <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#settoolbar\">setToolbar</a> method.</p>\n<p>Since Alloy 1.6.0, you can specify this property using the <code>&lt;WindowToolbar&gt;</code> element as a\nchild of a <code>&lt;Window&gt;</code> element, for example:</p>\n<pre><code>&lt;Alloy&gt;\n    &lt;NavigationWindow&gt;\n        &lt;Window&gt;\n            &lt;WindowToolbar&gt;\n                &lt;Button id=&quot;send&quot; title=&quot;Send&quot; style=&quot;Ti.UI.iOS.SystemButtonStyle.DONE&quot; /&gt;\n                &lt;FlexSpace/&gt;\n                &lt;Button id=&quot;camera&quot; systemButton=&quot;Ti.UI.iOS.SystemButton.CAMERA&quot; /&gt;\n                &lt;FlexSpace/&gt;\n                &lt;Button id=&quot;cancel&quot; systemButton=&quot;Ti.UI.iOS.SystemButton.CANCEL&quot; /&gt;\n            &lt;/WindowToolbar&gt;\n        &lt;/Window&gt;\n    &lt;/NavigationWindow&gt;\n&lt;/Alloy&gt;\n</code></pre>\n","filename":"Titanium.UI.Window.toolbar-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Array<Object>"},{"name":"top","deprecated":null,"summary":"<p>Window's top position, in platform-specific units.</p>\n","description":"<p>On Android, this property only works with lightweight windows.\nSee &quot;Android Heavyweight and Lightweight Windows&quot; in the main description\nof Titanium.UI.Window for more information.</p>\n","filename":"Titanium.UI.Window.top-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"inherits":null,"examples":[],"type":["Number","String"]},{"name":"transitionAnimation","deprecated":null,"summary":"<p>Use a transition animation when opening or closing windows in a\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/navigationwindow.html\">Titanium.UI.NavigationWindow</a> or <a href=\"/titanium-vuepress-docs/api/titanium/ui/tab.html\">Titanium.UI.Tab</a>.</p>\n","description":"<p>Create the transition animation using the <a href=\"/titanium-vuepress-docs/api/titanium/ui/ios.html#createtransitionanimation\">createTransitionAnimation</a>\nmethod.</p>\n","filename":"Titanium.UI.Window.transitionAnimation-property","platforms":[{"pretty_name":"iPhone","since":"3.2.0","name":"iphone"},{"pretty_name":"iPad","since":"3.2.0","name":"ipad"}],"inherits":null,"examples":[],"type":"Titanium.Proxy"},{"name":"translucent","deprecated":null,"summary":"<p>Boolean value indicating if the nav bar is translucent.</p>\n","description":null,"filename":"Titanium.UI.Window.translucent-property","platforms":[{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"}],"inherits":null,"examples":[],"type":"Boolean","default":"true on iOS7 and above, false otherwise."},{"name":"windowFlags","deprecated":null,"summary":"<p>Additional flags to set on the Activity Window.</p>\n","description":"<p>Sets flags such as <a href=\"/titanium-vuepress-docs/api/titanium/ui/android.html#flag_translucent_navigation\">FLAG_TRANSLUCENT_NAVIGATION</a> and\n<a href=\"/titanium-vuepress-docs/api/titanium/ui/android.html#flag_translucent_status\">FLAG_TRANSLUCENT_STATUS</a>. When using multiple flags, you must bitwise-or them together.</p>\n<p>See <a href=\"https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html\">WindowManager.LayoutParams</a> for\nlist of additional flags that you can assign to this property. You can assign these Java flags to this property\nby using their numeric constant.</p>\n<p>Setting <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#fullscreen\">fullscreen</a> to <code>true</code> automatically sets the <a href=\"https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_FULLSCREEN\">WindowManager.LayoutParams.FLAG_FULLSCREEN</a>\nflag. Setting <a href=\"/titanium-vuepress-docs/api/titanium/ui/window.html#flagsecure\">flagSecure</a> to true automatically sets the <a href=\"https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_SECURE\">WindowManager.LayoutParams.FLAG_SECURE</a> flag.</p>\n","filename":"Titanium.UI.Window.windowFlags-property","platforms":[{"pretty_name":"Android","since":"3.3.0","name":"android"}],"inherits":null,"examples":[],"type":"Number","availability":"creation"},{"name":"windowPixelFormat","deprecated":null,"summary":"<p>Set the pixel format for the Activity's Window.</p>\n","description":"<p>For more information on pixel formats, see\n<a href=\"https://developer.android.com/reference/android/view/Window.html#setFormat(int)\">Android SDK Window.setFormat</a></p>\n","filename":"Titanium.UI.Window.windowPixelFormat-property","platforms":[{"pretty_name":"Android","since":"1.8.0","name":"android"}],"inherits":null,"examples":[],"type":"Number"},{"name":"windowSoftInputMode","deprecated":null,"summary":"<p>Determines whether a heavyweight window's soft input area (ie software keyboard) is visible\nas it receives focus and how the window behaves in order to accomodate it while keeping its\ncontents in view.</p>\n","description":"<p>In order for this property to take effect on an emulator, its Android Virtual Device (AVD)\nmust be configured with the <code>Keyboard Support</code> setting set to <code>No</code>. Note that it is always\nrecommended to test an application on a physical device to understand its true behavior.</p>\n<p>Setting this property forces the creation of a heavyweight window before Titanium 3.2.0. See &quot;Android Heavyweight\nand Lightweight Windows&quot; in the main description of this class for more information.</p>\n<p>This property is capable of representing two settings from the soft input <em>visibility</em>\nconstatns and soft input <em>adjustment</em> constants\nusing the <a href=\"http://en.wikipedia.org/wiki/Bitwise_operation#OR\">bitwise OR</a> operation.</p>\n<p>Note that in JavaScript, bitwise OR is achieved using the single pipe operand. See the\nexample for a demonstration.</p>\n<p>For more information, see the official Android Developers website API Reference for\n<a href=\"https://developer.android.com/reference/android/view/Window.html#setSoftInputMode(int)\">Window.setSoftInputMode</a>.</p>\n","filename":"Titanium.UI.Window.windowSoftInputMode-property","platforms":[{"pretty_name":"Android","since":"0.9","name":"android"}],"inherits":null,"examples":"<h4 id=\"examples\"><a class=\"header-anchor\" href=\"#examples\" aria-hidden=\"true\">#</a> Examples</h4>\n<h5 id=\"soft-input-visibility-and-adjustment\"><a class=\"header-anchor\" href=\"#soft-input-visibility-and-adjustment\" aria-hidden=\"true\">#</a> Soft Input Visibility and Adjustment</h5>\n<p>Create a white window and respond to a click of it to open a red window containing a\ntext area. Show the software keyboard automatically as the red window opens.</p>\n<pre><code>var win1 = Ti.UI.createWindow({\n  backgroundColor: 'white',\n  exitOnClose: true,\n  fullscreen: false,\n  title: 'Click window to test'\n});\n\n// use bitwise OR to combine two settings for the windowSoftInputMode property\nvar softInput = Ti.UI.Android.SOFT_INPUT_STATE_ALWAYS_VISIBLE | Ti.UI.Android.SOFT_INPUT_ADJUST_PAN;\n\nwin1.addEventListener('click', function(){\nvar win2 = Ti.UI.createWindow({\n  backgroundColor: 'red',\n  fullscreen: false,\n  windowSoftInputMode: softInput\n});\n\nvar textArea = Ti.UI.createTextArea({\n  value : 'I am a textarea',\n  height : 200,\n  width : 300,\n  top : 200\n});\nwin2.add(textArea);\nwin2.open();\n});\n\nwin1.open();\n</code></pre>\n","type":"Number","availability":"creation"}],"platforms":[{"pretty_name":"Android","since":"0.9","name":"android"},{"pretty_name":"iPhone","since":"0.9","name":"iphone"},{"pretty_name":"iPad","since":"0.9","name":"ipad"},{"pretty_name":"Windows","since":"4.1.0","name":"windowsphone"}],"filename":null,"type":"object","subtype":"view","constants":[]}